{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppNavbar from './components/navigation/AppNavbar';\nimport { useStateValue } from './context/store';\nimport Theme from './theme/Theme';\nimport { Grid } from \"@material-ui/core\";\nimport Demand from './components/demand/Demand';\nimport Survey from './components/survey/Survey';\nimport ListDemand from './components/demand/ListDemand';\nimport ListSurvey from './components/survey/ListSurvey';\nimport Report from './components/report/Report';\nimport RouteSecurity from './components/navigation/RouteSecurity';\nimport Login from './components/security/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [{\n    sessionUser,\n    openSnackbar\n  }, dispatch] = useStateValue();\n  const [startApp, setStartApp] = useState(false);\n  useEffect(() => {\n    if (!startApp) {}\n  }, [startApp]);\n  return startApp === false ? null : /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(MuithemeProvider, {\n        theme: Theme,\n        children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/auth/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RouteSecurity, {\n            exact: true,\n            path: \"/demand\",\n            component: Demand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RouteSecurity, {\n            exact: true,\n            path: \"/listdemand\",\n            component: ListDemand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RouteSecurity, {\n            exact: true,\n            path: \"/report\",\n            component: Report\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(RouteSecurity, {\n            exact: true,\n            path: \"/survey\",\n            component: Survey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RouteSecurity, {\n            exact: true,\n            path: \"/listsurvey\",\n            component: ListSurvey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6e0mT31YUBJb9ZMR+dxbEU7I63A=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/App.js"],"names":["React","useState","useEffect","ThemeProvider","MuithemeProvider","BrowserRouter","Router","Switch","Route","AppNavbar","useStateValue","Theme","Grid","Demand","Survey","ListDemand","ListSurvey","Report","RouteSecurity","Login","App","sessionUser","openSnackbar","dispatch","startApp","setStartApp"],"mappings":";;;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,0BAAlD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAC;AAAEC,IAAAA,WAAF;AAAcC,IAAAA;AAAd,GAAD,EAA+BC,QAA/B,IAA2Cb,aAAa,EAA9D;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsB,QAAL,EAAe,CAEd;AACF,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;AAMA,SAAOA,QAAQ,KAAK,KAAb,GAAqB,IAArB,gBACL,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEb,KAAzB;AAAA,gCACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,SAAS,EAAEQ;AAHb;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,aAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,SAAS,EAAEN;AAHb;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,aAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,SAAS,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA,kBAXF,eAgBG,QAAC,aAAD;AACC,YAAA,KAAK,MADN;AAEC,YAAA,IAAI,EAAC,SAFN;AAGC,YAAA,SAAS,EAAEE;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAhBH,eAqBE,QAAC,aAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,SAAS,EAAEH;AAHb;AAAA;AAAA;AAAA;AAAA,kBArBF,eA0BE,QAAC,aAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,SAAS,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GApDQI,G;UAC0CV,a;;;KAD1CU,G;AAsDT,eAAeA,GAAf","sourcesContent":["\nimport React,{useState,useEffect} from \"react\";\n\nimport './App.css';\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppNavbar from './components/navigation/AppNavbar';\nimport { useStateValue } from './context/store';\nimport Theme from './theme/Theme';\nimport {Grid} from \"@material-ui/core\";\nimport Demand from './components/demand/Demand';\nimport Survey from './components/survey/Survey';\nimport ListDemand from './components/demand/ListDemand';\nimport ListSurvey from './components/survey/ListSurvey';\nimport Report from './components/report/Report'; \nimport RouteSecurity from './components/navigation/RouteSecurity'\nimport Login from './components/security/Login';\n\nfunction App() {\n  const [{ sessionUser,openSnackbar }, dispatch] = useStateValue();\n  const [startApp, setStartApp] = useState(false);\n  \n  useEffect(() => {\n    if (!startApp) {\n     \n    }\n  }, [startApp]);\n\n  return startApp === false ? null :  (\n    <React.Fragment>\n      <Router>\n        <MuithemeProvider theme={Theme}>\n        <AppNavbar />\n            <Grid container>\n              <Route\n                exact\n                path=\"/auth/login\"\n                component={Login}\n              />\n              <RouteSecurity\n                exact\n                path=\"/demand\"\n                component={Demand}\n              />\n              <RouteSecurity\n                exact\n                path=\"/listdemand\"\n                component={ListDemand}\n              />\n               <RouteSecurity\n                exact\n                path=\"/report\"\n                component={Report}\n              />\n              <RouteSecurity\n                exact\n                path=\"/survey\"\n                component={Survey}\n              />\n              <RouteSecurity\n                exact\n                path=\"/listsurvey\"\n                component={ListSurvey}\n              />\n\n            </Grid>\n        </MuithemeProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}