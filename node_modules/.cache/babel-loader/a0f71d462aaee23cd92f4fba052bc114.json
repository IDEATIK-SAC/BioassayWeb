{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{ThemeProvider as MuithemeProvider}from\"@material-ui/core/styles\";import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import AppNavbar from'./components/navigation/AppNavbar';import{useStateValue}from'./context/store';import Theme from'./theme/Theme';import{Grid,Snackbar}from\"@material-ui/core\";import Demand from'./components/demand/Demand';import Survey from'./components/survey/Survey';import ListDemand from'./components/demand/ListDemand';import ListSurvey from'./components/survey/ListSurvey';import Report from'./components/report/Report';import ListReport from'./components/report/ListReport';import RouteSecurity from'./components/navigation/RouteSecurity';import Login from'./components/security/Login';import Configuration from'./components/configuration/Configuration';import Dashboard from'./components/dashboard/Dashboard';import{getEmployeeActually}from'./services/api/LoginService';import ServicesConfig from'./components/configuration/Services';import BranchConfig from'./components/configuration/Branch';import ModelConfig from'./components/configuration/Model';import ListUser from'./components/users/ListUser';import Customer from'./components/customers/Customer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),_useStateValue2$=_useStateValue2[0],sessionUser=_useStateValue2$.sessionUser,openSnackbar=_useStateValue2$.openSnackbar,dispatch=_useStateValue2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),startApp=_useState2[0],setStartApp=_useState2[1];useEffect(function(){if(!startApp){getEmployeeActually(dispatch).then(function(response){setStartApp(true);}).catch(function(error){setStartApp(false);});}},[startApp]);return startApp===false?null:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:\"bottom\",horizontal:\"center\"},open:openSnackbar?openSnackbar.open:false,autoHideDuration:3000,ContentProps:{\"aria-describedby\":\"message-id\"},message:/*#__PURE__*/_jsx(\"span\",{id:\"message-id\",children:openSnackbar?openSnackbar.message:\"\"}),onClose:function onClose(){return dispatch({type:\"OPEN_SNACKBAR\",openMessage:{open:false,message:\"\"}});}}),/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(MuithemeProvider,{theme:Theme,children:[/*#__PURE__*/_jsx(AppNavbar,{}),/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/auth/login\",component:Login}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/dashboard\",component:Dashboard}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/demand/:demandid?\",component:Demand}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/configuration\",component:Configuration}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/\",component:Demand}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/listdemand\",component:ListDemand}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/report/:reportid?\",component:Report}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/listreport\",component:ListReport}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/listuser\",component:ListUser}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/customers\",component:Customer}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/survey\",component:Survey}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/listsurvey\",component:ListSurvey}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/servicesconfig\",component:ServicesConfig}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/branchconfig\",component:BranchConfig}),/*#__PURE__*/_jsx(RouteSecurity,{exact:true,path:\"/modelconfig\",component:ModelConfig})]})})]})})]});}export default App;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/App.js"],"names":["React","useState","useEffect","ThemeProvider","MuithemeProvider","BrowserRouter","Router","Switch","Route","AppNavbar","useStateValue","Theme","Grid","Snackbar","Demand","Survey","ListDemand","ListSurvey","Report","ListReport","RouteSecurity","Login","Configuration","Dashboard","getEmployeeActually","ServicesConfig","BranchConfig","ModelConfig","ListUser","Customer","App","sessionUser","openSnackbar","dispatch","startApp","setStartApp","then","response","catch","error","vertical","horizontal","open","message","type","openMessage"],"mappings":"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","sourcesContent":["\nimport React,{useState,useEffect} from \"react\";\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppNavbar from './components/navigation/AppNavbar';\nimport { useStateValue } from './context/store';\nimport Theme from './theme/Theme';\nimport {Grid , Snackbar} from \"@material-ui/core\";\nimport Demand from './components/demand/Demand';\nimport Survey from './components/survey/Survey';\nimport ListDemand from './components/demand/ListDemand';\nimport ListSurvey from './components/survey/ListSurvey';\nimport Report from './components/report/Report'; \nimport ListReport from './components/report/ListReport'; \nimport RouteSecurity from './components/navigation/RouteSecurity';\nimport Login from './components/security/Login';\nimport Configuration from './components/configuration/Configuration';\nimport Dashboard from './components/dashboard/Dashboard';\nimport {getEmployeeActually} from './services/api/LoginService';\nimport ServicesConfig from './components/configuration/Services';\nimport BranchConfig from './components/configuration/Branch';\nimport ModelConfig from './components/configuration/Model';\nimport ListUser from './components/users/ListUser';\nimport Customer from './components/customers/Customer';\n\nfunction App() {\n  const [{ sessionUser,openSnackbar}, dispatch] = useStateValue();\n  const [startApp, setStartApp] = useState(false); \n  \n  useEffect(() => {\n    if (!startApp) {\n      getEmployeeActually(dispatch).then(response =>{\n        setStartApp(true);\n      }).catch(error=>{\n        setStartApp(false);\n      });\n    }\n  }, [startApp]);\n\n  return startApp === false ? null :  (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={openSnackbar ? openSnackbar.open : false}\n        autoHideDuration={3000}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={<span id=\"message-id\">{openSnackbar ? openSnackbar.message : \"\"}</span>}\n        onClose={() => dispatch({\n          type: \"OPEN_SNACKBAR\",\n          openMessage: {\n            open: false,\n            message: \"\"\n          }\n        })}\n      >\n\n      </Snackbar>\n      <Router>\n        <MuithemeProvider theme={Theme}>\n        <AppNavbar />\n            <Grid container>\n            <Switch>\n              <Route\n                exact\n                path=\"/auth/login\"\n                component={Login}\n              />\n               <RouteSecurity\n                exact\n                path=\"/dashboard\"\n                component={Dashboard}\n              />\n              <RouteSecurity\n                exact\n                path=\"/demand/:demandid?\"\n                component={Demand}\n              />\n              <RouteSecurity\n                exact\n                path=\"/configuration\"\n                component={Configuration}\n              />\n              <RouteSecurity\n                exact\n                path=\"/\"\n                component={Demand}\n              />\n              <RouteSecurity\n                exact\n                path=\"/listdemand\"\n                component={ListDemand}\n              />\n               <RouteSecurity\n                exact\n                path=\"/report/:reportid?\"\n                component={Report}\n              />\n              <RouteSecurity\n                exact\n                path=\"/listreport\"\n                component={ListReport}\n              />\n               <RouteSecurity\n                exact\n                path=\"/listuser\"\n                component={ListUser}\n              />\n                <RouteSecurity\n                exact\n                path=\"/customers\"\n                component={Customer}\n              />\n              <RouteSecurity\n                exact\n                path=\"/survey\"\n                component={Survey}\n              />\n              <RouteSecurity\n                exact\n                path=\"/listsurvey\"\n                component={ListSurvey}\n              />\n                <RouteSecurity\n                exact\n                path=\"/servicesconfig\"\n                component={ServicesConfig}\n              />\n               <RouteSecurity\n                exact\n                path=\"/branchconfig\"\n                component={BranchConfig}\n              />\n               <RouteSecurity\n                exact\n                path=\"/modelconfig\"\n                component={ModelConfig}\n              />\n              </Switch>\n            </Grid>\n        </MuithemeProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}