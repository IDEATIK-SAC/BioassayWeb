{"ast":null,"code":"import HttpClient from\"../HttpClient\";export var SaveReport=function SaveReport(model,service,finding,process,causes,recommendations,observations){model.ServiceTypeId=JSON.stringify(service);model.Finding=JSON.stringify(finding);model.ProcedureReport=JSON.stringify(process);model.PossibleCauses=JSON.stringify(causes);model.Recommendations=JSON.stringify(recommendations);model.Observations=JSON.stringify(observations);console.log(model);return new Promise(function(resolve,reject){HttpClient.post('/Report/SaveReport',model).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getRequestsDocumentReportById=function getRequestsDocumentReportById(id){return new Promise(function(resolve,reject){HttpClient.get('/RequestDocument/GetRequestsDocumentReportById?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getCustomerByRequestId=function getCustomerByRequestId(id){return new Promise(function(resolve,reject){HttpClient.get('/RequestDocument/GetCustomerByRequestId?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var GetReports=function GetReports(){return new Promise(function(resolve,reject){HttpClient.get('/Report/GetReports').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var GetReportById=function GetReportById(id){return new Promise(function(resolve,reject){HttpClient.get('/Report/GetReportById?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getReportsFull=function getReportsFull(){return new Promise(function(resolve,reject){HttpClient.get('/Report/GetReportsFull').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/ReportService.js"],"names":["HttpClient","SaveReport","model","service","finding","process","causes","recommendations","observations","ServiceTypeId","JSON","stringify","Finding","ProcedureReport","PossibleCauses","Recommendations","Observations","console","log","Promise","resolve","reject","post","then","response","catch","error","getRequestsDocumentReportById","id","get","getCustomerByRequestId","GetReports","GetReportById","getReportsFull"],"mappings":"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","sourcesContent":["import HttpClient from \"../HttpClient\";\n\nexport const SaveReport = (model,service,finding,process,causes,recommendations,observations) =>{\n\n    \n    model.ServiceTypeId = JSON.stringify(service);\n    model.Finding = JSON.stringify(finding);\n    model.ProcedureReport = JSON.stringify(process);\n    model.PossibleCauses = JSON.stringify(causes);\n    model.Recommendations = JSON.stringify(recommendations);\n    model.Observations = JSON.stringify(observations);\n    \n    console.log(model);\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Report/SaveReport' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\n\nexport const getRequestsDocumentReportById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetRequestsDocumentReportById?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\nexport const getCustomerByRequestId =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetCustomerByRequestId?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\nexport const GetReports =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Report/GetReports').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const GetReportById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Report/GetReportById?id=' + id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const getReportsFull =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Report/GetReportsFull').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }"]},"metadata":{},"sourceType":"module"}