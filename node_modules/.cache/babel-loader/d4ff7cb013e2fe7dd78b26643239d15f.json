{"ast":null,"code":"import _defineProperty from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Dialog,DialogTitle,FormControl,DialogContent,TextField,DialogActions,Button,Select,MenuItem}from\"@material-ui/core\";import{getBranches,saveModelLine,getModelLineById}from\"../../../services/api/ConfigService\";import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModalModel=function ModalModel(props){var isOpen=props.isOpen,handleClose=props.handleClose,modelId=props.modelId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),branches=_useState2[0],setBranches=_useState2[1];var _useState3=useState({Id:0,Name:'',BranchId:0}),_useState4=_slicedToArray(_useState3,2),model=_useState4[0],setModel=_useState4[1];useEffect(function(){getBranches().then(function(response){setBranches(response.data);});if(modelId>0){getModelLineById(modelId).then(function(response){setModel({Id:response.data.id,Name:response.data.name,BranchId:response.data.branchId});}).catch(function(error){setModel({Id:0,Name:'',BranchId:0});});}else{setModel({Id:0,Name:'',BranchId:0});}},[isOpen,modelId]);var saveModelLocal=function saveModelLocal(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setModel(function(last){return _objectSpread(_objectSpread({},last),{},_defineProperty({},name,value));});};var sendModelServer=function sendModelServer(){saveModelLine(model).then(function(response){swal(\"Buen trabajo!\",\"El modelo a sido guardado con éxito\",\"success\").then(function(){handleClose();});});};return/*#__PURE__*/_jsxs(Dialog,{open:isOpen,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",children:\"Modelo\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(FormControl,{fullWidth:true,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Select,{fullWidth:true,label:\"Marca\",name:\"BranchId\",value:model.BranchId||'0',onChange:saveModelLocal,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"0\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Seleccione\"})}),branches.map(function(n){return/*#__PURE__*/_jsx(MenuItem,{value:n.id,children:n.name});})]})}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",name:\"Name\",value:model.Name,label:\"Descripci\\xF3n\",onChange:saveModelLocal,type:\"text\",fullWidth:true})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"primary\",children:\"Salir\"}),/*#__PURE__*/_jsx(Button,{onClick:sendModelServer,color:\"primary\",children:\"Guardar\"})]})]});};export default ModalModel;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/components/modalModel.js"],"names":["React","useState","useEffect","Dialog","DialogTitle","FormControl","DialogContent","TextField","DialogActions","Button","Select","MenuItem","getBranches","saveModelLine","getModelLineById","swal","ModalModel","props","isOpen","handleClose","modelId","branches","setBranches","Id","Name","BranchId","model","setModel","then","response","data","id","name","branchId","catch","error","saveModelLocal","e","target","value","last","sendModelServer","map","n"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,MAAR,CAAeC,WAAf,CAA2BC,WAA3B,CAAuCC,aAAvC,CAAqDC,SAArD,CAA+DC,aAA/D,CAA6EC,MAA7E,CAAoFC,MAApF,CAA2FC,QAA3F,KAA0G,mBAA1G,CACA,OAASC,WAAT,CAAqBC,aAArB,CAAoCC,gBAApC,KAA4D,qCAA5D,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,C,wFAGA,GAAMC,CAAAA,UAAU,CAAE,QAAZA,CAAAA,UAAY,CAACC,KAAD,CAAS,CAC3B,GAAQC,CAAAA,MAAR,CAAyCD,KAAzC,CAAQC,MAAR,CAAgBC,WAAhB,CAAyCF,KAAzC,CAAgBE,WAAhB,CAA6BC,OAA7B,CAAyCH,KAAzC,CAA6BG,OAA7B,CACA,cAAkCnB,QAAQ,CAAC,EAAD,CAA1C,wCAAQoB,QAAR,eAAmBC,WAAnB,eACA,eAA2BrB,QAAQ,CAAC,CAClCsB,EAAE,CAAE,CAD8B,CAElCC,IAAI,CAAG,EAF2B,CAGlCC,QAAQ,CAAG,CAHuB,CAAD,CAAnC,yCAAQC,KAAR,eAAeC,QAAf,eAMAzB,SAAS,CAAC,UAAM,CACZU,WAAW,GAAGgB,IAAd,CAAmB,SAAAC,QAAQ,CAAG,CAC5BP,WAAW,CAACO,QAAQ,CAACC,IAAV,CAAX,CACD,CAFD,EAGA,GAAIV,OAAO,CAAG,CAAd,CAAiB,CACfN,gBAAgB,CAACM,OAAD,CAAhB,CAA0BQ,IAA1B,CAA+B,SAAAC,QAAQ,CAAG,CACxCF,QAAQ,CAAC,CACPJ,EAAE,CAAEM,QAAQ,CAACC,IAAT,CAAcC,EADX,CAEPP,IAAI,CAAGK,QAAQ,CAACC,IAAT,CAAcE,IAFd,CAGPP,QAAQ,CAAGI,QAAQ,CAACC,IAAT,CAAcG,QAHlB,CAAD,CAAR,CAKH,CANC,EAMCC,KAND,CAMO,SAAAC,KAAK,CAAG,CACfR,QAAQ,CAAC,CACPJ,EAAE,CAAE,CADG,CAEPC,IAAI,CAAG,EAFA,CAGPC,QAAQ,CAAG,CAHJ,CAAD,CAAR,CAKD,CAZC,EAaD,CAdD,IAcK,CACHE,QAAQ,CAAC,CACPJ,EAAE,CAAE,CADG,CAEPC,IAAI,CAAG,EAFA,CAGPC,QAAQ,CAAG,CAHJ,CAAD,CAAR,CAKD,CAEJ,CA1BQ,CA0BN,CAACP,MAAD,CAAQE,OAAR,CA1BM,CAAT,CA4BA,GAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAK,CAC1B,cAAyBA,CAAC,CAACC,MAA3B,CAAQN,IAAR,WAAQA,IAAR,CAAeO,KAAf,WAAeA,KAAf,CAEAZ,QAAQ,CAAC,SAACa,IAAD,wCACJA,IADI,wBAENR,IAFM,CAECO,KAFD,IAAD,CAAR,CAID,CAPD,CASA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAI,CAC1B5B,aAAa,CAACa,KAAD,CAAb,CAAqBE,IAArB,CAA0B,SAAAC,QAAQ,CAAG,CACnCd,IAAI,CAAC,eAAD,CAAkB,qCAAlB,CAAyD,SAAzD,CAAJ,CACCa,IADD,CACM,UAAM,CACVT,WAAW,GACZ,CAHD,EAID,CALD,EAMD,CAPD,CASI,mBACI,MAAC,MAAD,EAAQ,IAAI,CAAED,MAAd,CAAsB,OAAO,CAAEC,WAA/B,CAA4C,kBAAgB,mBAA5D,wBACK,KAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,oBADL,cAEA,MAAC,aAAD,yBACA,KAAC,WAAD,EAAa,SAAS,KAAtB,CAAuB,OAAO,CAAC,UAA/B,uBACY,MAAC,MAAD,EACI,SAAS,KADb,CAEI,KAAK,CAAC,OAFV,CAGI,IAAI,CAAC,UAHT,CAII,KAAK,CAAEO,KAAK,CAACD,QAAN,EAAkB,GAJ7B,CAKI,QAAQ,CAAEW,cALd,wBAOI,KAAC,QAAD,EAAU,KAAK,CAAC,GAAhB,uBACI,kCADJ,EAPJ,CAUMf,QAAQ,CAACqB,GAAT,CAAa,SAACC,CAAD,qBACb,KAAC,QAAD,EAAU,KAAK,CAAEA,CAAC,CAACZ,EAAnB,UAAwBY,CAAC,CAACX,IAA1B,EADa,EAAb,CAVN,GADZ,EADA,cAkBE,KAAC,SAAD,EACE,SAAS,KADX,CAEE,MAAM,CAAC,OAFT,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAEN,KAAK,CAACF,IAJf,CAKE,KAAK,CAAC,gBALR,CAME,QAAQ,CAAEY,cANZ,CAOE,IAAI,CAAC,MAPP,CAQE,SAAS,KARX,EAlBF,GAFA,cA+BA,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAEjB,WAAjB,CAA8B,KAAK,CAAC,SAApC,mBADF,cAIE,KAAC,MAAD,EAAQ,OAAO,CAAEsB,eAAjB,CAAkC,KAAK,CAAC,SAAxC,qBAJF,GA/BA,GADJ,CA0CH,CAjGD,CAkGA,cAAezB,CAAAA,UAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport {Dialog,DialogTitle,FormControl,DialogContent,TextField,DialogActions,Button,Select,MenuItem} from \"@material-ui/core\";\nimport { getBranches,saveModelLine, getModelLineById } from \"../../../services/api/ConfigService\";\nimport swal from 'sweetalert';\n\n\nconst ModalModel= (props)=>{\nconst { isOpen, handleClose ,modelId } = props;\nconst [ branches , setBranches] = useState([]);\nconst [ model, setModel] = useState({\n  Id: 0,\n  Name : '',\n  BranchId : 0\n});\n\nuseEffect(() => {\n    getBranches().then(response =>{\n      setBranches(response.data)\n    });  \n    if (modelId > 0) {\n      getModelLineById(modelId).then(response =>{\n        setModel({\n          Id: response.data.id,\n          Name : response.data.name,\n          BranchId : response.data.branchId\n        });\n    }).catch(error =>{\n      setModel({\n        Id: 0,\n        Name : '',\n        BranchId : 0\n      });\n    });\n    }else{\n      setModel({\n        Id: 0,\n        Name : '',\n        BranchId : 0\n      });\n    }\n\n}, [isOpen,modelId])\n\nconst saveModelLocal = (e)=>{\n  const { name , value } = e.target;\n\n  setModel((last) => ({\n    ...last,\n    [name]: value\n  }));\n}\n\nconst sendModelServer = ()=>{\n  saveModelLine(model).then(response =>{\n    swal(\"Buen trabajo!\", \"El modelo a sido guardado con éxito\", \"success\")\n    .then(() => { \n      handleClose();     \n    }); \n  });\n}\n\n    return(\n        <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n             <DialogTitle id=\"form-dialog-title\">Modelo</DialogTitle>\n        <DialogContent>\n        <FormControl fullWidth variant=\"outlined\"  > \n                    <Select \n                        fullWidth\n                        label=\"Marca\"\n                        name=\"BranchId\"\n                        value={model.BranchId || '0'}\n                        onChange={saveModelLocal}\n                        >\n                        <MenuItem value=\"0\">\n                            <em>Seleccione</em>\n                        </MenuItem>\n                        {(branches.map((n) => \n                          <MenuItem value={n.id}>{n.name}</MenuItem>\n                        ))}\n                      </Select>\n                    \n                    </FormControl>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            name=\"Name\"\n            value={model.Name}\n            label=\"Descripción\"\n            onChange={saveModelLocal}\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Salir\n          </Button>\n          <Button onClick={sendModelServer} color=\"primary\">\n            Guardar\n          </Button>\n        </DialogActions>\n        </Dialog>\n    )\n}\nexport default ModalModel;"]},"metadata":{},"sourceType":"module"}