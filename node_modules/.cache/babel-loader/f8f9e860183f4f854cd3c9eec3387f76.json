{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/users/ListUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getEmployeers } from \"../../services/api/LoginService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListUser = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [userid, setUserId] = useState([]);\n  const columns = [{\n    field: 'id',\n    headerName: 'Nº',\n    width: 100\n  }, {\n    field: 'categoria',\n    headerName: 'Categoria',\n    width: 200\n  }, {\n    field: 'fEmision',\n    headerName: 'Emisión',\n    width: 200\n  }, {\n    field: 'nameClient',\n    headerName: 'Cliente',\n    width: 400\n  }, {\n    field: 'rucClient',\n    headerName: 'RUC',\n    width: 300\n  }, {\n    field: 'userAssing',\n    headerName: 'Responsable',\n    width: 200\n  }, {\n    field: 'detail',\n    headerName: 'Detalle',\n    description: 'This column has a value getter and is not sortable.',\n    width: 160,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\",\n        style: {\n          marginLeft: 16\n        },\n        onClick: goToDetaillUser,\n        children: \"Detalle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }];\n\n  const gotNew = () => {};\n\n  const goToDetaillUser = () => {};\n\n  useEffect(() => {\n    getEmployeers().then(response => {\n      setRows(response.data);\n    });\n  }, [true]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \" Usuarios del Sistema \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"Nombre\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"Usuario\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"Login\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: gotNew,\n          variant: \"contained\",\n          children: \"Nuevo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '100%',\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          onSelectionModelChange: newselection => {\n            setUserId(newselection.selectionModel[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListUser, \"FfII+VRPYlKmBwxsXzuMuKhgag4=\");\n\n_c = ListUser;\nexport default ListUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListUser\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/users/ListUser.js"],"names":["React","useState","useEffect","Container","Grid","Typography","TextField","Button","DataGrid","getEmployeers","ListUser","rows","setRows","userid","setUserId","columns","field","headerName","width","description","renderCell","params","marginLeft","goToDetaillUser","gotNew","then","response","data","marginTop","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport { Container,Grid,Typography,TextField,Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getEmployeers } from \"../../services/api/LoginService\";\n\nconst ListUser = ()=>{\n    const [ rows , setRows] = useState([]);\n    const [ userid , setUserId] = useState([]);\n  \n    const columns = [\n      { field: 'id', headerName: 'Nº', width: 100 },\n      { field: 'categoria', headerName: 'Categoria', width: 200 },\n      { field: 'fEmision', headerName: 'Emisión', width: 200 },\n      { field: 'nameClient', headerName: 'Cliente', width: 400},\n      { field: 'rucClient', headerName: 'RUC', width: 300},\n      { field: 'userAssing', headerName: 'Responsable', width: 200 },\n      {\n        field: 'detail',\n        headerName: 'Detalle',\n        description: 'This column has a value getter and is not sortable.',\n        width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16 }}\n                    onClick={goToDetaillUser}\n                    \n                >\n                    Detalle\n              </Button>\n            </strong>\n        ),\n    },\n    ];\n    const gotNew = ()=>{\n\n    }\n    const goToDetaillUser = ()=>{\n\n    }\n\n    useEffect(() => {\n        getEmployeers().then(response =>{\n            setRows(response.data);\n        });\n    }, [true])\n\n    return(\n        <Container>\n            <Grid container spacing={2} style={{marginTop:30}}>\n            <Grid item md={12} justify=\"center\" alignItems=\"center\">\n              <Typography variant=\"h4\"> Usuarios del Sistema </Typography>\n            </Grid>\n            <Grid item md={3}>\n              <TextField fullWidth id=\"outlined-basic\" label=\"Nombre\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n            <TextField fullWidth id=\"outlined-basic\" label=\"Usuario\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n            <TextField fullWidth id=\"outlined-basic\" label=\"Login\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n             <Button onClick={gotNew} variant=\"contained\" >Nuevo</Button>\n\n            </Grid>\n            <div style={{ height: 400, width: '100%',marginTop:20 }}>\n                    \n                    <DataGrid \n                        rows={rows}\n                        columns={columns}\n                        onSelectionModelChange={(newselection) =>{\n                          setUserId(newselection.selectionModel[0]);\n                      }}  \n                    />\n                </div>\n            </Grid>\n        </Container>\n    );\n\n}\nexport default ListUser;"]},"metadata":{},"sourceType":"module"}