{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/navigation/RouteSecurity.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useStateValue } from '../../context/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RouteSecurity({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const [{\n    sessionUser\n  }, dispatch] = useStateValue();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => sessionUser ? sessionUser.authenticated === true ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this) : null : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RouteSecurity, \"zO0K3RmdbNEMR7M8PS1P/NB7dDE=\", false, function () {\n  return [useStateValue];\n});\n\n_c = RouteSecurity;\nexport default RouteSecurity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteSecurity\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/navigation/RouteSecurity.js"],"names":["React","Route","useStateValue","RouteSecurity","component","Component","rest","sessionUser","dispatch","props","authenticated"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAvB,EAA0D;AAAA;;AACtD,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAkBC,QAAlB,IAA8BN,aAAa,EAAjD;AACA,sBACI,QAAC,KAAD,OACQI,IADR;AAEI,IAAA,MAAM,EAAGG,KAAD,IACJF,WAAW,GAAIA,WAAW,CAACG,aAAZ,KAA8B,IAA9B,gBACX,QAAC,SAAD,OAAeD,KAAf;AAAA,SAA0BH;AAA1B;AAAA;AAAA;AAAA;AAAA,YADW,GAGf,IAHW,GAKX;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAfQH,a;UAC+BD,a;;;KAD/BC,a;AAgBT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useStateValue } from '../../context/store';\n\nfunction RouteSecurity({ component: Component, ...rest }) {\n    const [{ sessionUser }, dispatch] = useStateValue();\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                sessionUser ? (sessionUser.authenticated === true ? (\n                    <Component {...props} {...rest} />\n                ) :\n                null\n                ) :\n                null\n            }\n        />\n    );\n}\nexport default RouteSecurity;"]},"metadata":{},"sourceType":"module"}