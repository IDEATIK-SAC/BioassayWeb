{"ast":null,"code":"import HttpClient from\"../HttpClient\";var token_seguridad=window.localStorage.getItem(\"token_id\");var token_object=window.localStorage.getItem(\"token_employee\");export var loginUser=function loginUser(model,dispatch){return new Promise(function(resolve,reject){HttpClient.post('/Employee/Login',model).then(function(response){resolve(response);dispatch({type:\"SESSION_START\",session:response.data,authenticated:true});window.localStorage.setItem(\"token_id\",response.data.id);window.localStorage.setItem(\"token_employee\",JSON.stringify(response.data));}).catch(function(error){resolve(error.response);});});};export var SaveEmployeer=function SaveEmployeer(model){return new Promise(function(resolve,reject){HttpClient.post('/Employee/Save',model).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var deleteEmployee=function deleteEmployee(model){return new Promise(function(resolve,reject){HttpClient.post('/Employee/DeleteEmployee',model).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getEmployeers=function getEmployeers(){return new Promise(function(resolve,reject){HttpClient.get('/Employee/GetEmployees').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getEmployeeActually=function getEmployeeActually(dispatch){return new Promise(function(resolve,reject){HttpClient.get('/Employee/GetEmployeeById?id='+token_seguridad).then(function(response){resolve(response);dispatch({type:\"SESSION_START\",session:response.data,authenticated:true});}).catch(function(error){resolve(error.response);});});};export var getEmployeeById=function getEmployeeById(id){return new Promise(function(resolve,reject){HttpClient.get('/Employee/GetEmployeeById?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getEmployeeByType=function getEmployeeByType(id){return new Promise(function(resolve,reject){HttpClient.get('/Employee/GetEmployeeByType?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/LoginService.js"],"names":["HttpClient","token_seguridad","window","localStorage","getItem","token_object","loginUser","model","dispatch","Promise","resolve","reject","post","then","response","type","session","data","authenticated","setItem","id","JSON","stringify","catch","error","SaveEmployeer","deleteEmployee","getEmployeers","get","getEmployeeActually","getEmployeeById","getEmployeeByType"],"mappings":"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","sourcesContent":["import HttpClient from \"../HttpClient\";\n\n\nconst token_seguridad = window.localStorage.getItem(\"token_id\");\nconst token_object = window.localStorage.getItem(\"token_employee\");\n\n \nexport const loginUser = (model,dispatch) =>{\n    \n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Login' , model).then(response => {\n            resolve(response);\n            dispatch({\n                type:\"SESSION_START\",\n                session : response.data,\n                authenticated : true\n            })\n            window.localStorage.setItem(\"token_id\",response.data.id);\n            window.localStorage.setItem(\"token_employee\",JSON.stringify(response.data));\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const SaveEmployeer = (model) =>{\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Save' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const deleteEmployee = (model) =>{\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/DeleteEmployee' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const getEmployeers =()=> {\n   return new Promise((resolve, reject) => {\n        HttpClient.get('/Employee/GetEmployees').then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const getEmployeeActually =(dispatch)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Employee/GetEmployeeById?id='+ token_seguridad).then(response => {\n             resolve(response);\n             \n             dispatch({\n                type:\"SESSION_START\",\n                session : response.data,\n                authenticated : true\n            })          \n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\nexport const getEmployeeById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Employee/GetEmployeeById?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const getEmployeeByType = (id) =>{ \n    return new Promise((resolve, reject) => {\n        HttpClient.get('/Employee/GetEmployeeByType?id=' + id).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n"]},"metadata":{},"sourceType":"module"}