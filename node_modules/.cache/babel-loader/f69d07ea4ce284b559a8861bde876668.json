{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Services.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Button, Typography, TextField } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport ModalLine from \"./components/modalLine\";\nimport { getLines, deleteLine, getLineById } from \"../../services/api/ConfigService\";\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ServicesConfig = () => {\n  _s();\n\n  const [openLine, setOpenLine] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [lineId, setLineId] = useState(0);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90,\n    identity: true\n  }, {\n    field: 'name',\n    headerName: 'Descripción',\n    width: 250\n  }, {\n    field: 'edit',\n    headerName: 'Editar',\n    width: 160,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\",\n        style: {\n          marginLeft: 16\n        },\n        onClick: onclickbutton,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'detail',\n    headerName: 'Eliminar',\n    width: 160,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\",\n        style: {\n          marginLeft: 16,\n          backgroundColor: \"red\"\n        },\n        onClick: deleteLineServer,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }];\n  useEffect(() => {\n    getLines().then(response => {\n      setRows(response.data);\n    });\n  }, [openLine]);\n\n  const deleteLineServer = () => {\n    getLineById(lineId).then(response => {\n      if (response.data != null) {\n        deleteLine(response.data).then(response => {\n          if (response.data) {\n            swal(\"Buen trabajo!\", \"La linea a sido eliminada con éxito\", \"success\").then(() => {\n              getLines().then(response => {\n                setRows(response.data);\n              });\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const handleOpenLine = () => {\n    setOpenLine(!openLine);\n  };\n\n  const onclickbutton = () => {\n    handleOpenLine();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: true,\n    style: {\n      marginTop: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            textAlign: \"center\"\n          },\n          variant: 'h3',\n          children: \" Lineas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Descripci\\xF3n\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onclickbutton,\n          fullWidth: true,\n          variant: \"contained\",\n          children: \"Nuevo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalLine, {\n          isOpen: openLine,\n          handleClose: handleOpenLine,\n          lineId: lineId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 400,\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: rows,\n            columns: columns,\n            pageSize: 5,\n            onSelectionModelChange: newselection => {\n              setLineId(newselection.selectionModel[0]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ServicesConfig, \"8rpNNLLNRPI33Ix7sMvBpGaSCOM=\");\n\n_c = ServicesConfig;\nexport default ServicesConfig;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicesConfig\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Services.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","TextField","DataGrid","ModalLine","getLines","deleteLine","getLineById","swal","ServicesConfig","openLine","setOpenLine","rows","setRows","lineId","setLineId","columns","field","headerName","width","identity","renderCell","params","marginLeft","onclickbutton","backgroundColor","deleteLineServer","then","response","data","handleOpenLine","marginTop","textAlign","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { Container, Grid , Button, Typography  ,TextField} from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport ModalLine from \"./components/modalLine\";\nimport { getLines,deleteLine,getLineById } from \"../../services/api/ConfigService\";\nimport swal from 'sweetalert';\n\nconst ServicesConfig =()=>{\n\n    const [ openLine, setOpenLine ] = useState(false);\n    const [ rows ,setRows] = useState([]);\n    const [ lineId ,setLineId] = useState(0);\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90,identity: true },\n        { field: 'name', headerName: 'Descripción', width: 250},\n        { field: 'edit', headerName: 'Editar', width: 160,\n            renderCell: (params) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        style={{ marginLeft: 16 }}\n                        onClick={onclickbutton}>\n                        Editar\n                  </Button>\n                </strong>\n            ),\n        },\n        { field: 'detail', headerName: 'Eliminar', width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16, backgroundColor : \"red\" }}\n                    onClick={deleteLineServer}\n                >\n                    Eliminar\n              </Button>\n            </strong>\n        ),\n    },\n      ];\n\n      useEffect(() => {\n        getLines().then(response =>{ \n            setRows(response.data);\n        })         \n      }, [openLine])\n      \n      const deleteLineServer = () =>{\n        getLineById(lineId).then(response => {\n            if (response.data != null) {\n                deleteLine(response.data).then(response => {\n                    if(response.data){\n                        swal(\"Buen trabajo!\", \"La linea a sido eliminada con éxito\", \"success\")\n                        .then(() => { \n                            getLines().then(response =>{ \n                                setRows(response.data);\n                            })        \n                    });\n                    }\n                });\n            }\n        });\n      }\n\n\n      const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        handleOpenLine();\n      }\n\n    return(\n        <Container maxWidth style={{ marginTop:20}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography style={{textAlign :\"center\"}} variant={'h3'}> Lineas</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                 <TextField fullWidth label=\"Descripción\" variant=\"outlined\" />\n                </Grid>\n                <Grid item xs={2}>\n                    <Button  fullWidth variant=\"contained\">Buscar</Button>\n                </Grid>\n                <Grid item xs={2}>\n                    <Button onClick={onclickbutton} fullWidth variant=\"contained\">Nuevo</Button>\n                    <ModalLine isOpen={openLine} handleClose={handleOpenLine} lineId = {lineId}/>\n                </Grid>\n                <Grid item xs={12}>\n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={5}\n                        onSelectionModelChange={(newselection) =>{\n                            setLineId(newselection.selectionModel[0]);\n                        }}  \n                    />\n                    </div>\n                  </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default ServicesConfig;"]},"metadata":{},"sourceType":"module"}