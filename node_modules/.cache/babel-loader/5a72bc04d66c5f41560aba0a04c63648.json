{"ast":null,"code":"import HttpClient from \"../HttpClient\";\nexport const loginUser = (model, dispatch) => {\n  console.log(model);\n  return new Promise((resolve, reject) => {\n    HttpClient.post('/Employee/Login', model).then(response => {\n      resolve(response);\n      dispatch({\n        type: \"SESSION_START\",\n        session: response.data,\n        authenticated: true\n      });\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const getUserApps = () => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RtUserAppApi/GetUserApps').then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const getEmployeeById = id => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/Employee/GetEmployeeById?id=' + id).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/LoginService.js"],"names":["HttpClient","loginUser","model","dispatch","console","log","Promise","resolve","reject","post","then","response","type","session","data","authenticated","catch","error","getUserApps","get","getEmployeeById","id"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAmB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCR,IAAAA,UAAU,CAACS,IAAX,CAAgB,iBAAhB,EAAoCP,KAApC,EAA2CQ,IAA3C,CAAgDC,QAAQ,IAAI;AACxDJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACAR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAC,eADA;AAELC,QAAAA,OAAO,EAAGF,QAAQ,CAACG,IAFd;AAGLC,QAAAA,aAAa,EAAG;AAHX,OAAD,CAAR;AAKH,KAPD,EAOGC,KAPH,CAOSC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACU,KAAK,CAACN,QAAP,CAAP;AACH,KATD;AAUH,GAXM,CAAP;AAYH,CAdM;AAiBP,OAAO,MAAMO,WAAW,GAAE,MAAK;AAC5B,SAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCR,IAAAA,UAAU,CAACmB,GAAX,CAAe,2BAAf,EAA4CT,IAA5C,CAAiDC,QAAQ,IAAI;AACzDJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGK,KAFH,CAESC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACU,KAAK,CAACN,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARM;AAUP,OAAO,MAAMS,eAAe,GAAGC,EAAD,IAAO;AACjC,SAAO,IAAIf,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCR,IAAAA,UAAU,CAACmB,GAAX,CAAe,kCAAiCE,EAAhD,EAAoDX,IAApD,CAAyDC,QAAQ,IAAI;AACjEJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGK,KAFH,CAESC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACU,KAAK,CAACN,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARK","sourcesContent":["import HttpClient from \"../HttpClient\";\n\nexport const loginUser = (model,dispatch) =>{\n    console.log(model);\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Login' , model).then(response => {\n            resolve(response);\n            dispatch({\n                type:\"SESSION_START\",\n                session : response.data,\n                authenticated : true\n            })\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\n\nexport const getUserApps =()=> {\n   return new Promise((resolve, reject) => {\n        HttpClient.get('/RtUserAppApi/GetUserApps').then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const getEmployeeById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Employee/GetEmployeeById?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }"]},"metadata":{},"sourceType":"module"}