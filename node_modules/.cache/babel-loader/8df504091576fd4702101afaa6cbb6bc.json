{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Configuration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Enterprise from \"./components/enterprise\";\nimport Profiles from \"./components/profiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  completed: {\n    display: 'inline-block'\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Empresa', 'Perfiles', 'ImpresiÃ³n', 'Servicios'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(Enterprise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Profiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst Configuration = () => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(new Set());\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const totalSteps = () => {\n    return getSteps().length;\n  };\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const skippedSteps = () => {\n    return skipped.size;\n  };\n\n  const completedSteps = () => {\n    return completed.size;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps() - skippedSteps();\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !completed.has(i)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = new Set(completed);\n    newCompleted.add(activeStep);\n    setCompleted(newCompleted);\n    /**\n     * Sigh... it would be much nicer to replace the following if conditional with\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\n     * thus we have to resort to not being very DRY.\n     */\n\n    if (completed.size !== totalSteps() - skippedSteps()) {\n      handleNext();\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted(new Set());\n    setSkipped(new Set());\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  function isStepComplete(step) {\n    return completed.has(step);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      nonLinear: true,\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const buttonProps = {};\n\n        if (isStepOptional(index)) {\n          buttonProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 38\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            onClick: handleStep(index),\n            completed: isStepComplete(index),\n            ...buttonProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), isStepOptional(activeStep) && !completed.has(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSkip,\n            className: classes.button,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), activeStep !== steps.length && (completed.has(activeStep) ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            className: classes.completed,\n            children: [\"Step \", activeStep + 1, \" already completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleComplete,\n            children: completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Configuration, \"HZ7SJIis51kZlsyKJgTnzHymfAo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Configuration;\nexport default Configuration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Configuration\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Configuration.js"],"names":["React","makeStyles","Stepper","Step","StepButton","Button","Typography","Enterprise","Profiles","useStyles","theme","root","width","button","marginRight","spacing","backButton","completed","display","instructions","marginTop","marginBottom","getSteps","getStepContent","step","Configuration","classes","activeStep","setActiveStep","useState","setCompleted","Set","skipped","setSkipped","steps","totalSteps","length","isStepOptional","handleSkip","Error","prevActiveStep","prevSkipped","newSkipped","values","add","skippedSteps","size","completedSteps","allStepsCompleted","isLastStep","handleNext","newActiveStep","findIndex","i","has","handleBack","handleStep","handleComplete","newCompleted","handleReset","isStepSkipped","isStepComplete","map","label","index","stepProps","buttonProps","optional"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Enterprise from \"./components/enterprise\";\nimport Profiles from \"./components/profiles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n    },\n    completed: {\n      display: 'inline-block',\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n  \n  function getSteps() {\n    return ['Empresa', 'Perfiles', 'ImpresiÃ³n','Servicios' ];\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return <Enterprise />;\n      case 1:\n        return <Profiles />;\n      case 2:\n        return 'Step 3: This is the bit I really care about!';\n      default:\n        return 'Unknown step';\n    }\n  }\n\nconst Configuration = ()=>{\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [completed, setCompleted] = React.useState(new Set());\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n  \n    const totalSteps = () => {\n      return getSteps().length;\n    };\n  \n    const isStepOptional = (step) => {\n      return step === 1;\n    };\n  \n    const handleSkip = () => {\n      if (!isStepOptional(activeStep)) {\n        // You probably want to guard against something like this\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n  \n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped((prevSkipped) => {\n        const newSkipped = new Set(prevSkipped.values());\n        newSkipped.add(activeStep);\n        return newSkipped;\n      });\n    };\n  \n    const skippedSteps = () => {\n      return skipped.size;\n    };\n  \n    const completedSteps = () => {\n      return completed.size;\n    };\n  \n    const allStepsCompleted = () => {\n      return completedSteps() === totalSteps() - skippedSteps();\n    };\n  \n    const isLastStep = () => {\n      return activeStep === totalSteps() - 1;\n    };\n  \n    const handleNext = () => {\n      const newActiveStep =\n        isLastStep() && !allStepsCompleted()\n          ? // It's the last step, but not all steps have been completed\n            // find the first step that has been completed\n            steps.findIndex((step, i) => !completed.has(i))\n          : activeStep + 1;\n  \n      setActiveStep(newActiveStep);\n    };\n  \n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n  \n    const handleStep = (step) => () => {\n      setActiveStep(step);\n    };\n  \n    const handleComplete = () => {\n      const newCompleted = new Set(completed);\n      newCompleted.add(activeStep);\n      setCompleted(newCompleted);\n  \n      /**\n       * Sigh... it would be much nicer to replace the following if conditional with\n       * `if (!this.allStepsComplete())` however state is not set when we do this,\n       * thus we have to resort to not being very DRY.\n       */\n      if (completed.size !== totalSteps() - skippedSteps()) {\n        handleNext();\n      }\n    };\n  \n    const handleReset = () => {\n      setActiveStep(0);\n      setCompleted(new Set());\n      setSkipped(new Set());\n    };\n  \n    const isStepSkipped = (step) => {\n      return skipped.has(step);\n    };\n  \n    function isStepComplete(step) {\n      return completed.has(step);\n    }\n  \n    return (\n      <div className={classes.root}>\n        <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const buttonProps = {};\n            if (isStepOptional(index)) {\n              buttonProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepButton\n                  onClick={handleStep(index)}\n                  completed={isStepComplete(index)}\n                  {...buttonProps}\n                >\n                  {label}\n                </StepButton>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {allStepsCompleted() ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset}>Reset</Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  Next\n                </Button>\n                {isStepOptional(activeStep) && !completed.has(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n  \n                {activeStep !== steps.length &&\n                  (completed.has(activeStep) ? (\n                    <Typography variant=\"caption\" className={classes.completed}>\n                      Step {activeStep + 1} already completed\n                    </Typography>\n                  ) : (\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\n                      {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\n                    </Button>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n}\nexport default Configuration;"]},"metadata":{},"sourceType":"module"}