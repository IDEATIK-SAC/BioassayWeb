{"ast":null,"code":"import HttpClient from \"../HttpClient\";\nexport const loginUser = model => {\n  return new Promise((resolve, reject) => {\n    HttpClient.post('/Employee/Login', model).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const getUserApps = () => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RtUserAppApi/GetUserApps').then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/LoginService.js"],"names":["HttpClient","loginUser","model","Promise","resolve","reject","post","then","response","catch","error","getUserApps","get"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCL,IAAAA,UAAU,CAACM,IAAX,CAAgB,iBAAhB,EAAoCJ,KAApC,EAA2CK,IAA3C,CAAgDC,QAAQ,IAAI;AACxDJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANM,CAAP;AAOH,CARM;AAWP,OAAO,MAAMG,WAAW,GAAE,MAAK;AAC5B,SAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCL,IAAAA,UAAU,CAACY,GAAX,CAAe,2BAAf,EAA4CL,IAA5C,CAAiDC,QAAQ,IAAI;AACzDJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARM","sourcesContent":["import HttpClient from \"../HttpClient\";\n\nexport const loginUser = (model) =>{\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Login' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\n\nexport const getUserApps =()=> {\n   return new Promise((resolve, reject) => {\n        HttpClient.get('/RtUserAppApi/GetUserApps').then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}"]},"metadata":{},"sourceType":"module"}