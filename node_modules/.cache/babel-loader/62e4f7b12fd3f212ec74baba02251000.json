{"ast":null,"code":"import HttpClient from\"../HttpClient\";import axios from\"axios\";export var saveClientServer=function saveClientServer(model){return new Promise(function(resolve,reject){HttpClient.post('/Client/SaveClient',model).then(function(response){resolve(response.data);}).catch(function(error){resolve(error.response);});});};export var deleteClientServer=function deleteClientServer(model){return new Promise(function(resolve,reject){HttpClient.post('/Client/DeleteClient',model).then(function(response){resolve(response.data);}).catch(function(error){resolve(error.response);});});};export var validateRUCClient=function validateRUCClient(model){return new Promise(function(resolve,reject){HttpClient.post('/Client/ValidateRUCClient',model).then(function(response){resolve(response.data);}).catch(function(error){resolve(error.response);});});};export var getClientById=function getClientById(id){return new Promise(function(resolve,reject){HttpClient.get('/Client/GetClientById?id='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getClientFull=function getClientFull(){return new Promise(function(resolve,reject){HttpClient.get('/Client/GetClientFull').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getClients=function getClients(){return new Promise(function(resolve,reject){HttpClient.get('/Client/GetClients').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var getRUC=function getRUC(ruc){return new Promise(function(resolve,reject){HttpClient.get('/Client/GetClientByRUC?id='+ruc).then(function(response){resolve(response.data);}).catch(function(error){resolve(error.response);});});};export var getRUCSunat=function getRUCSunat(ruc){return new Promise(function(resolve,reject){HttpClient.get('/Client/GetClientrucsunat?id='+ruc).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/ClientService.js"],"names":["HttpClient","axios","saveClientServer","model","Promise","resolve","reject","post","then","response","data","catch","error","deleteClientServer","validateRUCClient","getClientById","id","get","getClientFull","getClients","getRUC","ruc","getRUCSunat"],"mappings":"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","sourcesContent":["import HttpClient from \"../HttpClient\";\nimport axios from \"axios\";\n\nexport const saveClientServer = (model) =>{ \n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Client/SaveClient' , model).then(response => {\n            resolve(response.data);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const deleteClientServer = (model) =>{ \n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Client/DeleteClient' , model).then(response => {\n            resolve(response.data);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\n\nexport const validateRUCClient = (model) =>{ \n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Client/ValidateRUCClient' , model).then(response => {\n            resolve(response.data);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\n\nexport const getClientById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Client/GetClientById?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const getClientFull =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Client/GetClientFull').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n\n export const getClients =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Client/GetClients').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const getRUC = (ruc)=>{\n    return new Promise((resolve, reject) => {\n        HttpClient.get('/Client/GetClientByRUC?id=' + ruc).then(response => {\n            resolve(response.data);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n }\n\n\n export const getRUCSunat = (ruc)=>{\n    return new Promise((resolve, reject) => {\n        HttpClient.get('/Client/GetClientrucsunat?id=' + ruc).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n }"]},"metadata":{},"sourceType":"module"}