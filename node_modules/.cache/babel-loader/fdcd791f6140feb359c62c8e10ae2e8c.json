{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/components/modalBranch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button, FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport { saveBranch, getBranchById, getLines } from \"../../../services/api/ConfigService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalBranch = props => {\n  _s();\n\n  const {\n    isOpen,\n    handleClose\n  } = props;\n  const [branch, setBranch] = useState({\n    Id: 0,\n    Name: '',\n    LineId: 0\n  });\n  const [lines, setLines] = useState([]);\n  useEffect(() => {\n    if (isOpen) {\n      getLines().then(response => {\n        setLines(response.data);\n      });\n    }\n  }, [isOpen]);\n\n  const saveBranchLocal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBranch(last => ({ ...last,\n      [name]: value\n    }));\n  };\n\n  const sendBranchServer = () => {\n    saveBranch(branch).then(response => {\n      console.log(response);\n      handleClose();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Marca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          label: \"Linea\",\n          name: \"LineId\",\n          value: branch.LineId || '0',\n          onChange: saveBranchLocal,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"0\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), lines.map(n => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: n.id,\n            children: n.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 27\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Descripci\\xF3n\",\n        type: \"text\",\n        name: \"Name\",\n        value: branch.Name || '',\n        onChange: saveBranchLocal,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sendBranchServer,\n        color: \"primary\",\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalBranch, \"M2IhmwH4TZm+rfBuC1+vritbfkE=\");\n\n_c = ModalBranch;\nexport default ModalBranch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBranch\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/components/modalBranch.js"],"names":["React","useEffect","useState","Dialog","DialogTitle","DialogContent","TextField","DialogActions","Button","FormControl","Select","MenuItem","saveBranch","getBranchById","getLines","ModalBranch","props","isOpen","handleClose","branch","setBranch","Id","Name","LineId","lines","setLines","then","response","data","saveBranchLocal","e","name","value","target","last","sendBranchServer","console","log","map","n","id"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from \"react\";\nimport {Dialog,DialogTitle,DialogContent,\n  TextField,DialogActions,Button,FormControl,Select , MenuItem} from \"@material-ui/core\";\nimport { saveBranch, getBranchById ,getLines} from \"../../../services/api/ConfigService\";\n\nconst ModalBranch = (props)=>{\nconst { isOpen, handleClose  } = props;\n\nconst [ branch, setBranch] = useState({\n  Id : 0,\n  Name: '',\n  LineId : 0\n});\n\nconst [ lines, setLines] = useState([]);\n\nuseEffect(() => {\n  if (isOpen) {\n    getLines().then(response =>{\n      setLines(response.data);\n  })\n  }\n}, [isOpen])\n\nconst saveBranchLocal = (e) =>{\n  const { name , value} = e.target;\n\n  setBranch((last) => ({\n     ...last,\n     [name] : value\n  }));\n}\n\nconst sendBranchServer = ()=>{\n  saveBranch(branch).then(response => {\n      console.log(response);\n      handleClose();\n  });\n}\n\n    return(\n        <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n             <DialogTitle id=\"form-dialog-title\">Marca</DialogTitle>\n        <DialogContent>\n\n           <FormControl fullWidth variant=\"outlined\"  > \n                    <Select \n                        fullWidth\n                        label=\"Linea\"\n                        name=\"LineId\"\n                        value={branch.LineId || '0'}\n                        onChange={saveBranchLocal}\n                        >\n                        <MenuItem value=\"0\">\n                            <em>Seleccione</em>\n                        </MenuItem>\n                        {(lines.map((n) => \n                          <MenuItem value={n.id}>{n.name}</MenuItem>\n                        ))}\n                      </Select>\n                    \n                    </FormControl>\n\n                     \n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"DescripciÃ³n\"\n            type=\"text\"\n            name=\"Name\"\n            value={branch.Name || ''}\n            onChange={saveBranchLocal}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Salir\n          </Button>\n          <Button onClick={sendBranchServer} color=\"primary\">\n            Guardar\n          </Button>\n        </DialogActions>\n        </Dialog>\n    )\n}\nexport default ModalBranch;"]},"metadata":{},"sourceType":"module"}