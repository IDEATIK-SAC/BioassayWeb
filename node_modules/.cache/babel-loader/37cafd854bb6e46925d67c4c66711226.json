{"ast":null,"code":"import HttpClient from\"../HttpClient\";export var saveRequestDocument=function saveRequestDocument(model){//model.clientID = clientid;\nconsole.log(model);return new Promise(function(resolve,reject){/*RequestDocument/SaveRequestDocument*/HttpClient.post('/RequestDocument/SaveRequestDocument',model).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var GetRequestsDocumentById=function GetRequestsDocumentById(id){return new Promise(function(resolve,reject){HttpClient.get('/RequestDocument/GetRequestsDocumentById?requestid='+id).then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var GetCorrelative=function GetCorrelative(){return new Promise(function(resolve,reject){HttpClient.get('/RequestDocument/GetCorrelative').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};export var GetRequestsDocuments=function GetRequestsDocuments(){return new Promise(function(resolve,reject){HttpClient.get('/RequestDocument/GetRequestsDocuments').then(function(response){resolve(response);}).catch(function(error){resolve(error.response);});});};","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/Demandservice.js"],"names":["HttpClient","saveRequestDocument","model","console","log","Promise","resolve","reject","post","then","response","catch","error","GetRequestsDocumentById","id","get","GetCorrelative","GetRequestsDocuments"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,eAAvB,CAGA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAU,CACzC;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,MAAO,IAAIG,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,uCACCP,UAAU,CAACQ,IAAX,CAAgB,sCAAhB,CAAyDN,KAAzD,EAAgEO,IAAhE,CAAqE,SAAAC,QAAQ,CAAI,CAC7EJ,OAAO,CAACI,QAAD,CAAP,CACH,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACdN,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP,CACH,CAJD,EAKH,CAPK,CAAP,CAQF,CAXM,CAaP,MAAO,IAAMG,CAAAA,uBAAuB,CAAE,QAAzBA,CAAAA,uBAAyB,CAACC,EAAD,CAAO,CACzC,MAAO,IAAIT,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACnCP,UAAU,CAACe,GAAX,CAAe,sDAAuDD,EAAtE,EAA0EL,IAA1E,CAA+E,SAAAC,QAAQ,CAAI,CACvFJ,OAAO,CAACI,QAAD,CAAP,CACH,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACdN,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP,CACH,CAJD,EAKH,CANK,CAAP,CAOF,CARK,CAYN,MAAO,IAAMM,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAK,CAC/B,MAAO,IAAIX,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACnCP,UAAU,CAACe,GAAX,CAAe,iCAAf,EAAkDN,IAAlD,CAAuD,SAAAC,QAAQ,CAAI,CAC/DJ,OAAO,CAACI,QAAD,CAAP,CACH,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACdN,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP,CACH,CAJD,EAKH,CANK,CAAP,CAOF,CARM,CAUP,MAAO,IAAMO,CAAAA,oBAAoB,CAAE,QAAtBA,CAAAA,oBAAsB,EAAK,CACrC,MAAO,IAAIZ,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACnCP,UAAU,CAACe,GAAX,CAAe,uCAAf,EAAwDN,IAAxD,CAA6D,SAAAC,QAAQ,CAAI,CACrEJ,OAAO,CAACI,QAAD,CAAP,CACH,CAFD,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACdN,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP,CACH,CAJD,EAKH,CANK,CAAP,CAOF,CARM","sourcesContent":["import HttpClient from \"../HttpClient\";\n\n\nexport const saveRequestDocument = (model) =>{ \n    //model.clientID = clientid;\n    console.log(model);\n   return new Promise((resolve, reject) => {\n       /*RequestDocument/SaveRequestDocument*/\n        HttpClient.post('/RequestDocument/SaveRequestDocument' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    }) \n}\n\nexport const GetRequestsDocumentById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetRequestsDocumentById?requestid='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n\n\n export const GetCorrelative =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetCorrelative').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const GetRequestsDocuments =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetRequestsDocuments').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }"]},"metadata":{},"sourceType":"module"}