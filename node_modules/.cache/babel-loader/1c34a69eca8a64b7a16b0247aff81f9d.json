{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/customers/Customer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getClientFull } from \"../../services/api/ClientService\";\nimport ModalCustomer from \"./components/modalCustomer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Customer = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [customerId, setCustomerId] = useState(0);\n  const [openLine, setOpenLine] = useState(false);\n\n  const handleOpenLine = () => {\n    setOpenLine(!openLine);\n  };\n\n  const onclickbutton = () => {\n    setCustomerId(0);\n    handleOpenLine();\n  };\n\n  useEffect(() => {\n    getCustomerAll();\n  }, [true]);\n\n  const getCustomerAll = () => {\n    getClientFull().then(response => {\n      console.log(response);\n      setRows(response.data);\n    });\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'Nº',\n    width: 100\n  }, {\n    field: 'customerName',\n    headerName: 'Nombre',\n    width: 200\n  }, {\n    field: 'customerAddress',\n    headerName: 'Dirección',\n    width: 200\n  }, {\n    field: 'rucClient',\n    headerName: 'RUC',\n    width: 200\n  }, {\n    field: 'categoryName',\n    headerName: 'Categoria',\n    width: 200\n  }, {\n    field: 'detail',\n    headerName: 'Detalle',\n    description: 'This column has a value getter and is not sortable.',\n    width: 160,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"secondary\",\n        style: {\n          marginLeft: 16\n        },\n        onClick: goToDetaillUser,\n        children: \"Detalle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }];\n\n  const goToDetaillUser = () => {\n    setOpenLine(!openLine);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fullwidth: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 12,\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \" Clientes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"Nombre\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"outlined-basic\",\n          label: \"RUC\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onclickbutton,\n          variant: \"contained\",\n          children: \"Nuevo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(ModalCustomer, {\n          isOpen: openLine,\n          handleClose: handleOpenLine,\n          customerId: customerId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '100%',\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          onSelectionModelChange: newselection => {\n            setCustomerId(newselection.selectionModel[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Customer, \"GU6KYLq1Qm+fsf7v21GtaFdSfSc=\");\n\n_c = Customer;\nexport default Customer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/customers/Customer.js"],"names":["React","useState","useEffect","Container","Grid","Typography","TextField","Button","DataGrid","getClientFull","ModalCustomer","Customer","rows","setRows","customerId","setCustomerId","openLine","setOpenLine","handleOpenLine","onclickbutton","getCustomerAll","then","response","console","log","data","columns","field","headerName","width","description","renderCell","params","marginLeft","goToDetaillUser","height","marginTop","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Container, Grid,Typography,TextField,Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getClientFull } from \"../../services/api/ClientService\";\nimport ModalCustomer from \"./components/modalCustomer\";\n\nconst Customer = () =>{\n    const [ rows , setRows] = useState([]);\n    const [ customerId , setCustomerId] = useState(0); \n    const [ openLine, setOpenLine ] = useState(false);\n\n    const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        setCustomerId(0);\n        handleOpenLine();\n      }\n\n    useEffect(() => {\n       getCustomerAll();\n    }, [true])\n\n    const getCustomerAll =()=> {\n        getClientFull().then(response =>{\n            console.log(response);\n            setRows(response.data);\n        });\n    }\n\n    const columns = [\n      { field: 'id', headerName: 'Nº', width: 100 },\n      { field: 'customerName', headerName: 'Nombre', width: 200 },\n      { field: 'customerAddress', headerName: 'Dirección', width: 200 },\n      { field: 'rucClient', headerName: 'RUC', width: 200 },\n      { field: 'categoryName', headerName: 'Categoria', width: 200 },\n      {\n        field: 'detail',\n        headerName: 'Detalle',\n        description: 'This column has a value getter and is not sortable.',\n        width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16 }}\n                    onClick={goToDetaillUser}\n                    \n                >\n                    Detalle\n              </Button>\n            </strong>\n        ),\n    },\n    ];\n\n    const goToDetaillUser = ()=>{\n        setOpenLine(!openLine);\n    }\n\n\n    return(\n        <Container fullwidth>\n            <Grid container spacing={2}>\n                <Grid item md={12} justify=\"center\" alignItems=\"center\">\n                    <Typography variant=\"h4\"> Clientes </Typography>\n                </Grid>\n                <Grid item md={4}>\n                     <TextField fullWidth id=\"outlined-basic\" label=\"Nombre\" variant=\"outlined\" />\n                </Grid>\n            <Grid item md={4}>\n                <TextField fullWidth id=\"outlined-basic\" label=\"RUC\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={4}>\n             <Button onClick={onclickbutton}  variant=\"contained\" >Nuevo</Button>\n             <ModalCustomer isOpen={openLine} handleClose={handleOpenLine} customerId={customerId}  />\n            </Grid>\n            <div style={{ height: 400, width: '100%',marginTop:20 }}>\n                    \n                    <DataGrid \n                        rows={rows}\n                        columns={columns}\n                        onSelectionModelChange={(newselection) =>{\n                          setCustomerId(newselection.selectionModel[0]);\n                      }}  \n                    />\n                </div>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Customer;"]},"metadata":{},"sourceType":"module"}