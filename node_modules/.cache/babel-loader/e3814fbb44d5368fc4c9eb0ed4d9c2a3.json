{"ast":null,"code":"import HttpClient from \"../HttpClient\";\nexport const saveRequestDocument = model => {\n  //model.clientID = clientid;\n  return new Promise((resolve, reject) => {\n    /*RequestDocument/SaveRequestDocument*/\n    HttpClient.post('/RequestDocument/SaveRequestDocument', model).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const GetRequestsDocumentById = id => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RequestDocument/GetRequestsDocumentById?requestid=' + id).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\n_c = GetRequestsDocumentById;\nexport const getCustomerByRequestId = id => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RequestDocument/GetCustomerByRequestId?id=' + id).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const GetCorrelative = () => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RequestDocument/GetCorrelative').then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\n_c2 = GetCorrelative;\nexport const GetRequestsDocuments = () => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/RequestDocument/GetRequestsDocuments').then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\n_c3 = GetRequestsDocuments;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetRequestsDocumentById\");\n$RefreshReg$(_c2, \"GetCorrelative\");\n$RefreshReg$(_c3, \"GetRequestsDocuments\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/Demandservice.js"],"names":["HttpClient","saveRequestDocument","model","Promise","resolve","reject","post","then","response","catch","error","GetRequestsDocumentById","id","get","getCustomerByRequestId","GetCorrelative","GetRequestsDocuments"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAGA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAU;AACzC;AAED,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC;AACCL,IAAAA,UAAU,CAACM,IAAX,CAAgB,sCAAhB,EAAyDJ,KAAzD,EAAgEK,IAAhE,CAAqEC,QAAQ,IAAI;AAC7EJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GAPK,CAAP;AAQF,CAXM;AAaP,OAAO,MAAMG,uBAAuB,GAAGC,EAAD,IAAO;AACzC,SAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCL,IAAAA,UAAU,CAACa,GAAX,CAAe,wDAAuDD,EAAtE,EAA0EL,IAA1E,CAA+EC,QAAQ,IAAI;AACvFJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARK;KAAMG,uB;AAUZ,OAAO,MAAMG,sBAAsB,GAAGF,EAAD,IAAO;AACzC,SAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCL,IAAAA,UAAU,CAACa,GAAX,CAAe,gDAA+CD,EAA9D,EAAkEL,IAAlE,CAAuEC,QAAQ,IAAI;AAC/EJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARM;AAUP,OAAO,MAAMO,cAAc,GAAE,MAAK;AAC/B,SAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCL,IAAAA,UAAU,CAACa,GAAX,CAAe,iCAAf,EAAkDN,IAAlD,CAAuDC,QAAQ,IAAI;AAC/DJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARM;MAAMO,c;AAUb,OAAO,MAAMC,oBAAoB,GAAE,MAAK;AACrC,SAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnCL,IAAAA,UAAU,CAACa,GAAX,CAAe,uCAAf,EAAwDN,IAAxD,CAA6DC,QAAQ,IAAI;AACrEJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,KAAK,IAAI;AACdN,MAAAA,OAAO,CAACM,KAAK,CAACF,QAAP,CAAP;AACH,KAJD;AAKH,GANK,CAAP;AAOF,CARM;MAAMQ,oB","sourcesContent":["import HttpClient from \"../HttpClient\";\n\n\nexport const saveRequestDocument = (model) =>{ \n    //model.clientID = clientid;\n    \n   return new Promise((resolve, reject) => {\n       /*RequestDocument/SaveRequestDocument*/\n        HttpClient.post('/RequestDocument/SaveRequestDocument' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    }) \n}\n\nexport const GetRequestsDocumentById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetRequestsDocumentById?requestid='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const getCustomerByRequestId =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetCustomerByRequestId?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const GetCorrelative =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetCorrelative').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\n export const GetRequestsDocuments =()=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/RequestDocument/GetRequestsDocuments').then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }"]},"metadata":{},"sourceType":"module"}