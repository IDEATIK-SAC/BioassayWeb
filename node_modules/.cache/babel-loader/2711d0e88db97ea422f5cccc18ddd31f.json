{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Grid,Button,Typography,FormControl,Select,MenuItem}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import ModalBranch from\"./components/modalBranch\";import{getLines,getBranchByLine}from\"../../services/api/ConfigService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BranchConfig=function BranchConfig(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),lines=_useState2[0],setLines=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),lineid=_useState4[0],setLineId=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),branchid=_useState6[0],setBranchId=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),rows=_useState8[0],setRows=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),openLine=_useState10[0],setOpenLine=_useState10[1];var handleOpenLine=function handleOpenLine(){setOpenLine(!openLine);};useEffect(function(){console.log(\"openLine\");getLines().then(function(response){setLines(response.data);});},[openLine]);var columns=[{field:'id',headerName:'ID',width:90},{field:'name',headerName:'Descripción',width:250},{field:'edit',headerName:'Editar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:handleOpenLine,children:\"Editar\"})});}}];var onclickbutton=function onclickbutton(){setBranchId(0);handleOpenLine();};return/*#__PURE__*/_jsx(Container,{maxWidth:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{style:{textAlign:\"center\"},variant:'h3',children:\" Marcas\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(FormControl,{fullWidth:true,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Select,{fullWidth:true,label:\"Linea\",name:\"lineid\",value:lineid||0,onChange:function onChange(e){var lineid=e.target.value;setLineId(lineid);getBranchByLine(lineid).then(function(response){setRows(response.data);});},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"0\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Seleccione\"})}),lines.map(function(n){return/*#__PURE__*/_jsx(MenuItem,{value:n.id,children:n.name});})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",children:\"Buscar\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:2,children:[/*#__PURE__*/_jsx(Button,{onClick:onclickbutton,fullWidth:true,variant:\"contained\",children:\"Nuevo\"}),/*#__PURE__*/_jsx(ModalBranch,{isOpen:openLine,handleClose:handleOpenLine,branchid:branchid})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,pageSize:5,onSelectionModelChange:function onSelectionModelChange(newselection){setBranchId(newselection.selectionModel[0]);}})})})]})});};export default BranchConfig;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Branch.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","FormControl","Select","MenuItem","DataGrid","ModalBranch","getLines","getBranchByLine","BranchConfig","lines","setLines","lineid","setLineId","branchid","setBranchId","rows","setRows","openLine","setOpenLine","handleOpenLine","console","log","then","response","data","columns","field","headerName","width","renderCell","params","marginLeft","onclickbutton","textAlign","e","target","value","map","n","id","name","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { Container, Grid , Button, Typography  ,FormControl,Select,MenuItem} from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport ModalBranch from \"./components/modalBranch\";\nimport { getLines,getBranchByLine } from \"../../services/api/ConfigService\";\n\nconst BranchConfig =()=>{\nconst [ lines, setLines] = useState([]);\nconst [ lineid, setLineId ] = useState(0);\nconst [ branchid, setBranchId ] = useState(0);\nconst [ rows, setRows ] = useState([]);\n\nconst [ openLine, setOpenLine ] = useState(false);\nconst handleOpenLine =()=>{\n  setOpenLine(!openLine);\n}\n\nuseEffect(() => {\n    console.log(\"openLine\");\n    getLines().then(response =>{\n        setLines(response.data);\n    });\n}, [openLine])\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        { field: 'name', headerName: 'Descripción', width: 250},\n        { field: 'edit', headerName: 'Editar', width: 160,\n            renderCell: (params) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        style={{ marginLeft: 16 }}\n                        onClick={handleOpenLine}\n                        \n                    >\n                        Editar\n                  </Button>\n                </strong>\n            ),\n        }\n      ];\n      \n     \n\n      const onclickbutton =()=>{\n        setBranchId(0);\n        handleOpenLine();\n      }\n\n    return(\n        <Container maxWidth>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                <Typography style={{textAlign :\"center\"}} variant={'h3'}> Marcas</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                <FormControl fullWidth variant=\"outlined\"  > \n                    <Select \n                        fullWidth\n                        label=\"Linea\"\n                        name=\"lineid\"\n                        value={lineid || 0}\n                        onChange={(e =>{\n                            const lineid = e.target.value;\n                            setLineId(lineid);\n                            getBranchByLine(lineid).then(response =>{\n                                setRows(response.data);\n                            })\n                        })}\n                        >\n                        <MenuItem value=\"0\">\n                            <em>Seleccione</em>\n                        </MenuItem>\n                        {(lines.map((n) => \n                          <MenuItem value={n.id}>{n.name}</MenuItem>\n                        ))}\n                      </Select>\n                    \n                    </FormControl>\n\n                </Grid>\n                <Grid item xs={2}>\n                    <Button  fullWidth variant=\"contained\">Buscar</Button>\n                </Grid>\n                <Grid item xs={2}>\n                    <Button onClick={onclickbutton} fullWidth variant=\"contained\">Nuevo</Button>\n                    <ModalBranch isOpen={openLine} handleClose={handleOpenLine} branchid={branchid} />\n                </Grid>\n                <Grid item xs={12}>\n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={5}\n                        onSelectionModelChange={(newselection) =>{\n                            setBranchId(newselection.selectionModel[0]);\n                        }}  \n                    />\n                    </div>\n                  </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default BranchConfig;"]},"metadata":{},"sourceType":"module"}