{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Grid,Button,Typography,FormControl,Select,MenuItem}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import ModalModel from\"./components/modalModel\";import{deleteModel,getBranches,getModelLinesByBranch,getModelLineById}from\"../../services/api/ConfigService\";import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModelConfig=function ModelConfig(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),modelId=_useState2[0],setModelId=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openLine=_useState4[0],setOpenLine=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),rows=_useState6[0],setRows=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),branches=_useState8[0],setBranches=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),branchId=_useState10[0],setBranchId=_useState10[1];useEffect(function(){getBranches().then(function(response){setBranches(response.data);});},[openLine]);var columns=[{field:'id',headerName:'ID',width:90},{field:'name',headerName:'Descripción',width:250},{field:'edit',headerName:'Editar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:handleOpenLine,children:\"Editar\"})});}},{field:'delete',headerName:'Eliminar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16,backgroundColor:\"red\"},onClick:deleteModelServer,children:\"Eliminar\"})});}}];var handleOpenLine=function handleOpenLine(){setOpenLine(!openLine);};var onclickbutton=function onclickbutton(){setModelId(0);handleOpenLine();};var deleteModelServer=function deleteModelServer(){getModelLineById(modelId).then(function(response){if(response.data!=null){deleteModel(response.data).then(function(response){if(response.data){swal(\"Buen trabajo!\",\"El modelo a sido eliminado con éxito\",\"success\").then(function(){getModelLinesByBranch(branchId).then(function(response){setRows(response.data);});});}});}});};return/*#__PURE__*/_jsx(Container,{maxWidth:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{style:{textAlign:\"center\"},variant:'h3',children:\" Modelos\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(FormControl,{fullWidth:true,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Select,{fullWidth:true,label:\"Linea\",name:\"lineid\",value:branchId||0,onChange:function onChange(e){var branch=e.target.value;setBranchId(branch);getModelLinesByBranch(branch).then(function(response){setRows(response.data);});},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"0\",children:/*#__PURE__*/_jsx(\"em\",{children:\"Seleccione\"})}),branches.map(function(n){return/*#__PURE__*/_jsx(MenuItem,{value:n.id,children:n.name});})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",children:\"Buscar\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:2,children:[/*#__PURE__*/_jsx(Button,{onClick:onclickbutton,fullWidth:true,variant:\"contained\",children:\"Nuevo\"}),/*#__PURE__*/_jsx(ModalModel,{isOpen:openLine,handleClose:handleOpenLine,modelId:modelId})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,pageSize:5,onSelectionModelChange:function onSelectionModelChange(newselection){setModelId(newselection.selectionModel[0]);}})})})]})});};export default ModelConfig;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Model.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","FormControl","Select","MenuItem","DataGrid","ModalModel","deleteModel","getBranches","getModelLinesByBranch","getModelLineById","swal","ModelConfig","modelId","setModelId","openLine","setOpenLine","rows","setRows","branches","setBranches","branchId","setBranchId","then","response","data","columns","field","headerName","width","renderCell","params","marginLeft","handleOpenLine","backgroundColor","deleteModelServer","onclickbutton","textAlign","e","branch","target","value","map","n","id","name","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from \"react\";\nimport { Container, Grid , Button, Typography  ,FormControl,Select,MenuItem} from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport ModalModel from \"./components/modalModel\";\nimport { deleteModel, getBranches,getModelLinesByBranch ,getModelLineById} from \"../../services/api/ConfigService\";\nimport swal from 'sweetalert';\n\n\nconst ModelConfig =()=>{\n    const [ modelId, setModelId] = useState(0);\n    const [ openLine, setOpenLine ] = useState(false);\n    const [ rows, setRows] = useState([]);\n    const [ branches, setBranches] = useState([]);\n    const [ branchId, setBranchId] = useState(0);\n\n    useEffect(() => {\n        getBranches().then(response =>{\n            setBranches(response.data);\n        })\n    }, [openLine])\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        { field: 'name', headerName: 'Descripción', width: 250},\n        { field: 'edit', headerName: 'Editar', width: 160,\n            renderCell: (params) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        style={{ marginLeft: 16 }}\n                        onClick={handleOpenLine} \n                    >\n                        Editar\n                  </Button>\n                </strong>\n            ),\n        },\n        { field: 'delete', headerName: 'Eliminar', width: 160,\n            renderCell: (params) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        style={{ marginLeft: 16 ,backgroundColor:\"red\"}}\n                        onClick={deleteModelServer} \n                    >\n                        Eliminar\n                  </Button>\n                </strong>\n            ),\n        }\n      ];\n            \n      const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        setModelId(0);\n        handleOpenLine();\n      }\n      \n      const deleteModelServer = ()=>{\n          getModelLineById(modelId).then(response => {\n              if (response.data != null) {\n                  deleteModel(response.data).then(response => {\n                      if(response.data){\n                        swal(\"Buen trabajo!\", \"El modelo a sido eliminado con éxito\", \"success\")\n                        .then(() => { \n                            getModelLinesByBranch(branchId).then(response =>{\n                                setRows(response.data);\n                            })\n                        }); \n                      }\n                  });\n              }\n          })\n      }\n\n    return(\n        <Container maxWidth>\n            <Grid container spacing={2}>\n                <Grid item xs={12}> \n                <Typography style={{textAlign :\"center\"}} variant={'h3'}> Modelos</Typography>\n\n                </Grid>\n                <Grid item xs={8}>\n                <FormControl fullWidth variant=\"outlined\"  > \n                    <Select \n                        fullWidth\n                        label=\"Linea\"\n                        name=\"lineid\"\n                        value={branchId || 0}\n                        onChange={(e =>{\n                            const branch = e.target.value;\n                            setBranchId(branch);\n                            getModelLinesByBranch(branch).then(response =>{\n                                setRows(response.data);\n                            })\n                        })}\n                        >\n                        <MenuItem value=\"0\">\n                            <em>Seleccione</em>\n                        </MenuItem>\n                        {(branches.map((n) => \n                          <MenuItem value={n.id}>{n.name}</MenuItem>\n                        ))}\n                      </Select>\n                    \n                    </FormControl>\n\n                </Grid>\n                <Grid item xs={2}>\n                    <Button  fullWidth variant=\"contained\">Buscar</Button>\n                </Grid>\n                <Grid item xs={2}>\n                    <Button onClick={onclickbutton} fullWidth variant=\"contained\">Nuevo</Button>\n                    <ModalModel isOpen={openLine} handleClose={handleOpenLine} modelId={modelId} />\n                </Grid>\n                <Grid item xs={12}>\n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={5}\n                        onSelectionModelChange={(newselection) =>{\n                            setModelId(newselection.selectionModel[0]);\n                        }}  \n                    />\n                    </div>\n                  </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default ModelConfig;"]},"metadata":{},"sourceType":"module"}