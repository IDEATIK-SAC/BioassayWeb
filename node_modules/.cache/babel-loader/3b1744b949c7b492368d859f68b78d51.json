{"ast":null,"code":"var _jsxFileName = \"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/customers/components/modalCustomer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, FormControl, DialogContent, TextField, DialogActions, Button, Select, MenuItem } from \"@material-ui/core\";\nimport { getRUC, saveClientServer, getClientById, getRUCSunat } from \"../../../services/api/ClientService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalCustomer = props => {\n  _s();\n\n  const {\n    isOpen,\n    handleClose,\n    customerId\n  } = props;\n  const [customer, setCustomer] = useState({\n    Id: 0,\n    CustomerName: '',\n    CustomerAddress: '',\n    RUCClient: '',\n    CategoryId: 0\n  });\n  useEffect(() => {\n    if (customerId > 0) {\n      getCustomerById(customerId);\n    } else {\n      setCustomer({});\n    }\n  }, [customerId]);\n\n  const getCustomerById = customerId => {\n    getClientById(customerId).then(response => {\n      setCustomer(last => ({ ...last,\n        Id: response.data.id,\n        CustomerName: response.data.customerName,\n        CustomerAddress: response.data.customerAddress,\n        RUCClient: response.data.rucClient,\n        CategoryId: response.data.categoryId\n      }));\n    });\n  };\n\n  const onChangeRUC = e => {\n    let value = e.target.value;\n    getRUC(value).then(response => {\n      const {\n        data\n      } = response;\n      console.log(data);\n\n      if (data === null) {\n        getRUCSunat(value).then(response => {\n          setCustomer(last => ({ ...last,\n            CustomerName: response.data.nombre_o_razon_social,\n            CustomerAddress: response.data.direccion_completa\n          }));\n        });\n      } else {\n        setCustomer(last => ({ ...last,\n          Id: response.data.id,\n          CustomerName: response.data.customerName,\n          CustomerAddress: response.data.customerAddress,\n          RUCClient: response.data.rucClient,\n          CategoryId: response.data.categoryId\n        }));\n      }\n    });\n  };\n\n  const onChangeCustomer = e => {\n    setCustomer({ ...customer,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const saveCustomerServer = () => {\n    saveClientServer(customer).then(response => {\n      console.log(response);\n      handleClose(); //clearFieldsCustomer();\n    });\n  };\n\n  const clearFieldsCustomer = () => {\n    /*setCustomer({\n        CategoryId : 0,\n        CustomerAddress : '',\n        CustomerName : '',\n        Id :0,\n        RUCClient : ''\n    });*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Modelo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        name: \"RUCClient\",\n        label: \"RUC\",\n        type: \"text\",\n        value: customer.RUCClient || '',\n        onBlur: onChangeRUC,\n        onChange: onChangeCustomer,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"CustomerName\",\n        label: \"Nombre\",\n        type: \"text\",\n        value: customer.CustomerName || '',\n        onChange: onChangeCustomer,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"CustomerAddress\",\n        value: customer.CustomerAddress || '',\n        label: \"Direcci\\xF3n\",\n        onChange: onChangeCustomer,\n        type: \"text\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          marginTop: 15\n        },\n        fullWidth: true,\n        variant: \"standard\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          name: \"CategoryId\",\n          value: customer.CategoryId || 0,\n          label: \"Categoria\",\n          onChange: onChangeCustomer,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 0,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Seleccione una categoria \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 1,\n            children: \"SIN CATEGORIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 2,\n            children: \"BRONZE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 3,\n            children: \"SILVER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 4,\n            children: \"GOLD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 5,\n            children: \"PLATINUM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 6,\n            children: \"DIAMOND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: saveCustomerServer,\n        color: \"primary\",\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalCustomer, \"JrRGiGsZtvNhn2jsQR358EVWtT4=\");\n\n_c = ModalCustomer;\nexport default ModalCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCustomer\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/customers/components/modalCustomer.js"],"names":["React","useState","useEffect","Dialog","DialogTitle","FormControl","DialogContent","TextField","DialogActions","Button","Select","MenuItem","getRUC","saveClientServer","getClientById","getRUCSunat","ModalCustomer","props","isOpen","handleClose","customerId","customer","setCustomer","Id","CustomerName","CustomerAddress","RUCClient","CategoryId","getCustomerById","then","response","last","data","id","customerName","customerAddress","rucClient","categoryId","onChangeRUC","e","value","target","console","log","nombre_o_razon_social","direccion_completa","onChangeCustomer","name","saveCustomerServer","clearFieldsCustomer","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Dialog,DialogTitle,FormControl,DialogContent,TextField,DialogActions,Button,Select,MenuItem} from \"@material-ui/core\";\nimport { getRUC,saveClientServer,getClientById,getRUCSunat } from \"../../../services/api/ClientService\";\n\nconst ModalCustomer = (props)=>{\nconst { isOpen, handleClose,customerId } = props;\n\nconst [customer, setCustomer] = useState({\n    Id:0,\n    CustomerName:'',\n    CustomerAddress:'',\n    RUCClient:'',\n    CategoryId:0\n});\n\nuseEffect(() => {\n    if(customerId > 0){\n        getCustomerById(customerId);\n    }else{\n        setCustomer({});\n    }\n}, [customerId])\n\nconst getCustomerById=(customerId)=>{\n    getClientById(customerId).then(response =>{\n        setCustomer((last)=>({\n            ...last,\n            Id:response.data.id,\n            CustomerName: response.data.customerName,\n            CustomerAddress: response.data.customerAddress,\n            RUCClient: response.data.rucClient,\n            CategoryId: response.data.categoryId\n        })\n    )})\n};\n\nconst onChangeRUC = (e)=>{\n    let value = e.target.value;\n    getRUC(value).then(response =>{\n        const { data } = response;\n        console.log(data);\n        if(data  ===  null){\n            getRUCSunat(value).then(response =>{\n                setCustomer((last)=>({\n                    ...last,\n                    CustomerName : response.data.nombre_o_razon_social,\n                    CustomerAddress : response.data.direccion_completa,\n                }),  \n                )\n            })\n        }else{\n            setCustomer((last)=>({\n                ...last,\n                Id:response.data.id,\n                CustomerName: response.data.customerName,\n                CustomerAddress: response.data.customerAddress,\n                RUCClient: response.data.rucClient,\n                CategoryId: response.data.categoryId\n            }))\n        }\n \n    });\n}\n\nconst onChangeCustomer = (e)=>{\n    setCustomer({ ...customer, [e.target.name]: e.target.value });\n}\n\nconst saveCustomerServer =()=>{\n    saveClientServer(customer).then(response =>{\n        console.log(response);\n        handleClose();\n        //clearFieldsCustomer();\n    });\n}\nconst clearFieldsCustomer =()=>{\n    /*setCustomer({\n        CategoryId : 0,\n        CustomerAddress : '',\n        CustomerName : '',\n        Id :0,\n        RUCClient : ''\n    });*/\n}\n    return(\n        <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Modelo</DialogTitle>\n        <DialogContent>\n            <TextField\n                    \n                    margin=\"dense\"\n                    name=\"RUCClient\"\n                    label=\"RUC\"\n                    type=\"text\"\n                    value={customer.RUCClient || ''}\n                    onBlur={onChangeRUC}\n                    onChange={onChangeCustomer}\n                    fullWidth\n                    />\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    name=\"CustomerName\"\n                    label=\"Nombre\"\n                    type=\"text\"\n                    value={customer.CustomerName || ''}\n                    onChange={onChangeCustomer}\n                    fullWidth\n                    />\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    name=\"CustomerAddress\"\n                    value={customer.CustomerAddress || ''}\n                    label=\"Dirección\"\n                    onChange={onChangeCustomer}\n                    type=\"text\"\n                    fullWidth\n                    />\n              <FormControl style={{marginTop:15}} fullWidth variant=\"standard\"  > \n                                <Select\n                                fullWidth\n                                name=\"CategoryId\"\n                                value={customer.CategoryId || 0}\n                                label=\"Categoria\"\n                                onChange={onChangeCustomer}\n                                >\n                                <MenuItem value={0}>\n                                    <em>Seleccione una categoria </em>\n                                </MenuItem>\n                                \n                                <MenuItem value={1}>SIN CATEGORIA</MenuItem>\n                                <MenuItem value={2}>BRONZE</MenuItem>\n                                <MenuItem value={3}>SILVER</MenuItem>\n                                <MenuItem value={4}>GOLD</MenuItem>\n                                <MenuItem value={5}>PLATINUM</MenuItem>\n                                <MenuItem value={6}>DIAMOND</MenuItem>\n                            \n                                </Select>\n                            \n                            </FormControl>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n            Salir\n            </Button>\n            <Button onClick={saveCustomerServer}  color=\"primary\">\n            Guardar\n            </Button>\n        </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default ModalCustomer;"]},"metadata":{},"sourceType":"module"}