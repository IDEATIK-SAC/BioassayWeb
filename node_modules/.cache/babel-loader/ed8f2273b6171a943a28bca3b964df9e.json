{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Container,Grid,Typography,TextField,Button}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import{getReportsFull}from\"../../services/api/ReportService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListReport=function ListReport(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rows=_useState2[0],setRows=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),reportId=_useState4[0],setDemandId=_useState4[1];useEffect(function(){getReportsFull().then(function(response){console.log(response);setRows(response.data);});},[true]);var columns=[{field:'id',headerName:'Nº',width:100},{field:'reasonSocial',headerName:'Cliente',width:400},{field:'request',headerName:'Solicitud',width:140},{field:'team',headerName:'Equipo',width:150},{field:'model',headerName:'Modelo',width:180},{field:'detail',headerName:'Detalle',description:'This column has a value getter and is not sortable.',width:140,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:goToDetaillUser,children:\"Detalle\"})});}}];var goToDetaillUser=function goToDetaillUser(){props.history.push('/report/'+reportId);};var gotNew=function gotNew(){props.history.push('/report');};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,style:{marginTop:30},children:[/*#__PURE__*/_jsx(Grid,{item:true,md:12,justify:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\"Reportes Realizados \"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"Raz\\xF3n Social\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",type:\"date\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:3,children:/*#__PURE__*/_jsx(Button,{onClick:gotNew,variant:\"contained\",children:\"Nuevo\"})}),/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%',marginTop:20},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,onSelectionModelChange:function onSelectionModelChange(newselection){setDemandId(newselection.selectionModel[0]);}})})]})});};export default ListReport;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/report/ListReport.js"],"names":["React","useEffect","useState","Container","Grid","Typography","TextField","Button","DataGrid","getReportsFull","ListReport","props","rows","setRows","reportId","setDemandId","then","response","console","log","data","columns","field","headerName","width","description","renderCell","params","marginLeft","goToDetaillUser","history","push","gotNew","marginTop","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from \"react\";\nimport { Container,Grid,Typography,TextField,Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid'; \nimport { getReportsFull  } from \"../../services/api/ReportService\";\n\nconst ListReport = (props)=>{\n    \n    const [ rows , setRows] = useState([]);\n    const [ reportId , setDemandId] = useState([]);\n\n    useEffect(() => {\n        getReportsFull().then(response =>{\n            console.log(response);\n            setRows(response.data);\n        });\n    }, [true])\n\n    const columns = [\n        { field: 'id', headerName: 'Nº', width: 100 },\n        { field: 'reasonSocial', headerName: 'Cliente', width: 400},\n        { field: 'request', headerName: 'Solicitud', width: 140},\n        { field: 'team', headerName: 'Equipo', width: 150 },\n        { field: 'model', headerName: 'Modelo', width: 180 },\n        {\n          field: 'detail',\n          headerName: 'Detalle',\n          description: 'This column has a value getter and is not sortable.',\n          width: 140,\n          renderCell: (params) => (\n              <strong>\n                  <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"secondary\"\n                      style={{ marginLeft: 16 }}\n                      onClick={goToDetaillUser}\n                      \n                  >\n                      Detalle\n                </Button>\n              </strong>\n          ),\n      },\n      ];\n    \n      const goToDetaillUser =()=>{\n        props.history.push('/report/' + reportId);\n    }\n\n    const gotNew =()=>{\n        props.history.push('/report');\n      }\n\n    \n\n    return(\n        <Container>\n               <Grid container spacing={2} style={{marginTop:30}}>\n                <Grid item md={12} justify=\"center\" alignItems=\"center\">\n                    <Typography variant=\"h4\">Reportes Realizados </Typography> \n                </Grid>\n                    <Grid item md={4}>\n                    <TextField fullWidth id=\"outlined-basic\" label=\"Razón Social\" variant=\"outlined\" />\n                    </Grid>\n                    <Grid item md={4}>\n                    <TextField fullWidth id=\"outlined-basic\"   type=\"date\" variant=\"outlined\" />\n                    </Grid>\n                    <Grid item md={3}>\n                    <Button onClick={gotNew} variant=\"contained\" >Nuevo</Button>\n\n                    </Grid>\n                    <div style={{ height: 400, width: '100%',marginTop:20 }}>\n                    \n                    <DataGrid \n                        rows={rows}\n                        columns={columns}\n                        onSelectionModelChange={(newselection) =>{\n                          setDemandId(newselection.selectionModel[0]);\n                      }}  \n                    />\n                </div>\n                </Grid>\n        </Container>\n    );\n}\nexport default ListReport;"]},"metadata":{},"sourceType":"module"}