{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Grid,Typography,TextField,Button}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import{getClientFull,deleteClientServer,getClientById}from\"../../services/api/ClientService\";import ModalCustomer from\"./components/modalCustomer\";import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Customer=function Customer(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rows=_useState2[0],setRows=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),customerId=_useState4[0],setCustomerId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),openLine=_useState6[0],setOpenLine=_useState6[1];var handleOpenLine=function handleOpenLine(){setOpenLine(!openLine);};var onclickbutton=function onclickbutton(){setCustomerId(0);handleOpenLine();};useEffect(function(){getCustomerAll();},[openLine]);var getCustomerAll=function getCustomerAll(){getClientFull().then(function(response){setRows(response.data);});};var columns=[{field:'id',headerName:'Nº',width:100},{field:'customerName',headerName:'Nombre',width:200},{field:'customerAddress',headerName:'Dirección',width:200},{field:'rucClient',headerName:'RUC',width:200},{field:'categoryName',headerName:'Categoria',width:200},{field:'detail',headerName:'Detalle',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:goToDetaillUser,children:\" Detalle\"})});}},{field:'delete',headerName:'Eliminar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16,backgroundColor:\"red\"},onClick:deleteUser,children:\" Eliminar\"})});}}];var goToDetaillUser=function goToDetaillUser(){setOpenLine(!openLine);};var deleteUser=function deleteUser(){getClientById(customerId).then(function(response){console.log(response);if(response.data!=null){deleteClientServer(response.data).then(function(response){swal(\"Buen trabajo!\",\"El cliente a sido eliminado con éxito\",\"success\").then(function(){getCustomerAll();});});}});};return/*#__PURE__*/_jsx(Container,{fullwidth:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,md:12,justify:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\" Clientes \"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"Nombre\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"RUC\",variant:\"outlined\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,md:4,children:[/*#__PURE__*/_jsx(Button,{onClick:onclickbutton,variant:\"contained\",children:\"Nuevo\"}),/*#__PURE__*/_jsx(ModalCustomer,{isOpen:openLine,handleClose:handleOpenLine,customerId:customerId})]}),/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%',marginTop:20},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,onSelectionModelChange:function onSelectionModelChange(newselection){setCustomerId(newselection.selectionModel[0]);}})})]})});};export default Customer;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/customers/Customer.js"],"names":["React","useState","useEffect","Container","Grid","Typography","TextField","Button","DataGrid","getClientFull","deleteClientServer","getClientById","ModalCustomer","swal","Customer","rows","setRows","customerId","setCustomerId","openLine","setOpenLine","handleOpenLine","onclickbutton","getCustomerAll","then","response","data","columns","field","headerName","width","renderCell","params","marginLeft","goToDetaillUser","backgroundColor","deleteUser","console","log","height","marginTop","newselection","selectionModel"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,OAASC,SAAT,CAAoBC,IAApB,CAAyBC,UAAzB,CAAoCC,SAApC,CAA8CC,MAA9C,KAA4D,mBAA5D,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,aAAT,CAAuBC,kBAAvB,CAA0CC,aAA1C,KAA+D,kCAA/D,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAK,CAClB,cAA0Bb,QAAQ,CAAC,EAAD,CAAlC,wCAAQc,IAAR,eAAeC,OAAf,eACA,eAAsCf,QAAQ,CAAC,CAAD,CAA9C,yCAAQgB,UAAR,eAAqBC,aAArB,eACA,eAAkCjB,QAAQ,CAAC,KAAD,CAA1C,yCAAQkB,QAAR,eAAkBC,WAAlB,eAEA,GAAMC,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAI,CACtBD,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAFH,CAIE,GAAMG,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,EAAI,CACvBJ,aAAa,CAAC,CAAD,CAAb,CACAG,cAAc,GACf,CAHD,CAKFnB,SAAS,CAAC,UAAM,CACbqB,cAAc,GAChB,CAFQ,CAEN,CAACJ,QAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAK,CACvBd,aAAa,GAAGe,IAAhB,CAAqB,SAAAC,QAAQ,CAAG,CAE5BT,OAAO,CAACS,QAAQ,CAACC,IAAV,CAAP,CACH,CAHD,EAIH,CALD,CAOA,GAAMC,CAAAA,OAAO,CAAG,CACd,CAAEC,KAAK,CAAE,IAAT,CAAeC,UAAU,CAAE,IAA3B,CAAiCC,KAAK,CAAE,GAAxC,CADc,CAEd,CAAEF,KAAK,CAAE,cAAT,CAAyBC,UAAU,CAAE,QAArC,CAA+CC,KAAK,CAAE,GAAtD,CAFc,CAGd,CAAEF,KAAK,CAAE,iBAAT,CAA4BC,UAAU,CAAE,WAAxC,CAAqDC,KAAK,CAAE,GAA5D,CAHc,CAId,CAAEF,KAAK,CAAE,WAAT,CAAsBC,UAAU,CAAE,KAAlC,CAAyCC,KAAK,CAAE,GAAhD,CAJc,CAKd,CAAEF,KAAK,CAAE,cAAT,CAAyBC,UAAU,CAAE,WAArC,CAAkDC,KAAK,CAAE,GAAzD,CALc,CAMd,CACEF,KAAK,CAAE,QADT,CAEEC,UAAU,CAAE,SAFd,CAGEC,KAAK,CAAE,GAHT,CAIEC,UAAU,CAAE,oBAACC,MAAD,qBACR,qCACI,KAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAC,WAHV,CAII,KAAK,CAAE,CAAEC,UAAU,CAAE,EAAd,CAJX,CAKI,OAAO,CAAEC,eALb,sBADJ,EADQ,EAJd,CANc,CAuBhB,CACIN,KAAK,CAAE,QADX,CAEIC,UAAU,CAAE,UAFhB,CAGIC,KAAK,CAAE,GAHX,CAIIC,UAAU,CAAE,oBAACC,MAAD,qBACR,qCACI,KAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAC,WAHV,CAII,KAAK,CAAE,CAAEC,UAAU,CAAE,EAAd,CAAkBE,eAAe,CAAC,KAAlC,CAJX,CAKI,OAAO,CAAEC,UALb,uBADJ,EADQ,EAJhB,CAvBgB,CAAhB,CA0CA,GAAMF,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAI,CACxBd,WAAW,CAAC,CAACD,QAAF,CAAX,CACH,CAFD,CAIA,GAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACbzB,aAAa,CAACM,UAAD,CAAb,CAA0BO,IAA1B,CAA+B,SAAAC,QAAQ,CAAI,CACvCY,OAAO,CAACC,GAAR,CAAYb,QAAZ,EACE,GAAIA,QAAQ,CAACC,IAAT,EAAiB,IAArB,CAA2B,CACvBhB,kBAAkB,CAACe,QAAQ,CAACC,IAAV,CAAlB,CAAkCF,IAAlC,CAAuC,SAAAC,QAAQ,CAAI,CAC/CZ,IAAI,CAAC,eAAD,CAAkB,uCAAlB,CAA2D,SAA3D,CAAJ,CACCW,IADD,CACM,UAAM,CACRD,cAAc,GACjB,CAHD,EAIH,CALD,EAMH,CACJ,CAVH,EAaT,CAdD,CAiBA,mBACI,KAAC,SAAD,EAAW,SAAS,KAApB,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,OAAO,CAAC,QAA3B,CAAoC,UAAU,CAAC,QAA/C,uBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,wBADJ,EADJ,cAII,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACK,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,EAAE,CAAC,gBAAxB,CAAyC,KAAK,CAAC,QAA/C,CAAwD,OAAO,CAAC,UAAhE,EADL,EAJJ,cAOA,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,EAAE,CAAC,gBAAxB,CAAyC,KAAK,CAAC,KAA/C,CAAqD,OAAO,CAAC,UAA7D,EADJ,EAPA,cAUA,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,wBACC,KAAC,MAAD,EAAQ,OAAO,CAAED,aAAjB,CAAiC,OAAO,CAAC,WAAzC,mBADD,cAEC,KAAC,aAAD,EAAe,MAAM,CAAEH,QAAvB,CAAiC,WAAW,CAAEE,cAA9C,CAA8D,UAAU,CAAEJ,UAA1E,EAFD,GAVA,cAcA,YAAK,KAAK,CAAE,CAAEsB,MAAM,CAAE,GAAV,CAAeT,KAAK,CAAE,MAAtB,CAA6BU,SAAS,CAAC,EAAvC,CAAZ,uBAEQ,KAAC,QAAD,EACI,IAAI,CAAEzB,IADV,CAEI,OAAO,CAAEY,OAFb,CAGI,sBAAsB,CAAE,gCAACc,YAAD,CAAiB,CACvCvB,aAAa,CAACuB,YAAY,CAACC,cAAb,CAA4B,CAA5B,CAAD,CAAb,CACH,CALH,EAFR,EAdA,GADJ,EADJ,CA6BH,CArHD,CAuHA,cAAe5B,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Container, Grid,Typography,TextField,Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getClientFull,deleteClientServer,getClientById } from \"../../services/api/ClientService\";\nimport ModalCustomer from \"./components/modalCustomer\";\nimport swal from 'sweetalert';\n\nconst Customer = () =>{\n    const [ rows , setRows] = useState([]);\n    const [ customerId , setCustomerId] = useState(0); \n    const [ openLine, setOpenLine ] = useState(false);\n\n    const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        setCustomerId(0);\n        handleOpenLine();\n      }\n\n    useEffect(() => {\n       getCustomerAll();\n    }, [openLine])\n\n    const getCustomerAll =()=> { \n        getClientFull().then(response =>{\n            \n            setRows(response.data);\n        });\n    }\n\n    const columns = [\n      { field: 'id', headerName: 'Nº', width: 100 },\n      { field: 'customerName', headerName: 'Nombre', width: 200 },\n      { field: 'customerAddress', headerName: 'Dirección', width: 200 },\n      { field: 'rucClient', headerName: 'RUC', width: 200 },\n      { field: 'categoryName', headerName: 'Categoria', width: 200 },\n      {\n        field: 'detail',\n        headerName: 'Detalle', \n        width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16 }}\n                    onClick={goToDetaillUser} \n                > Detalle\n              </Button>\n            </strong>\n        ),\n    },\n    {\n        field: 'delete',\n        headerName: 'Eliminar', \n        width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16 ,backgroundColor:\"red\" }}\n                    onClick={deleteUser} \n                > Eliminar\n              </Button>\n            </strong>\n        ),\n    },\n    ];\n\n    const goToDetaillUser = ()=>{\n        setOpenLine(!openLine);\n    }\n\n    const deleteUser = ()=>{ \n              getClientById(customerId).then(response => {\n                  console.log(response);\n                    if (response.data != null) {\n                        deleteClientServer(response.data).then(response => { \n                            swal(\"Buen trabajo!\", \"El cliente a sido eliminado con éxito\", \"success\")\n                            .then(() => { \n                                getCustomerAll();\n                            });\n                        });\n                    }\n                });\n\n       \n    }\n\n\n    return(\n        <Container fullwidth>\n            <Grid container spacing={2}>\n                <Grid item md={12} justify=\"center\" alignItems=\"center\">\n                    <Typography variant=\"h4\"> Clientes </Typography>\n                </Grid>\n                <Grid item md={4}>\n                     <TextField fullWidth id=\"outlined-basic\" label=\"Nombre\" variant=\"outlined\" />\n                </Grid>\n            <Grid item md={4}>\n                <TextField fullWidth id=\"outlined-basic\" label=\"RUC\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={4}>\n             <Button onClick={onclickbutton}  variant=\"contained\" >Nuevo</Button>\n             <ModalCustomer isOpen={openLine} handleClose={handleOpenLine} customerId={customerId}  />\n            </Grid>\n            <div style={{ height: 400, width: '100%',marginTop:20 }}>\n                    \n                    <DataGrid \n                        rows={rows}\n                        columns={columns}\n                        onSelectionModelChange={(newselection) =>{\n                          setCustomerId(newselection.selectionModel[0]);\n                      }}  \n                    />\n                </div>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Customer;"]},"metadata":{},"sourceType":"module"}