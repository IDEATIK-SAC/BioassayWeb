{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Grid,Typography,TextField,Button}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import{getEmployeers,deleteEmployee,getEmployeeById}from\"../../services/api/LoginService\";import DetailUser from\"./popup/detailUser\";import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListUser=function ListUser(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rows=_useState2[0],setRows=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),userid=_useState4[0],setUserId=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),openLine=_useState6[0],setOpenLine=_useState6[1];var handleOpenLine=function handleOpenLine(){setOpenLine(!openLine);};var onclickbutton=function onclickbutton(){setUserId(0);handleOpenLine();};var columns=[{field:'id',headerName:'Nº',width:100},{field:'name',headerName:'Nombre',width:200},{field:'email',headerName:'Correo',width:200},{field:'phone',headerName:'Telèfono',width:200},{field:'detail',headerName:'Detalle',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:goToDetaillUser,children:\"Detalle\"})});}},{field:'delete',headerName:'Eliminar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16,backgroundColor:\"red\"},onClick:deleteEmployeeServer,children:\"Eliminar\"})});}}];var goToDetaillUser=function goToDetaillUser(){setOpenLine(!openLine);};useEffect(function(){getEmployeers().then(function(response){setRows(response.data);});},[openLine]);var deleteEmployeeServer=function deleteEmployeeServer(){getEmployeeById(userid).then(function(response){if(response.data){deleteEmployee(response.data).then(function(response){if(response.data){swal(\"Buen trabajo!\",\"El usuario a sido eliminado con éxito\",\"success\").then(function(){getEmployeers().then(function(response){setRows(response.data);});});}});}});};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,style:{marginTop:30},children:[/*#__PURE__*/_jsx(Grid,{item:true,md:12,justify:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:\" Usuarios del Sistema \"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"Nombre\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"Usuario\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,md:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,id:\"outlined-basic\",label:\"Login\",variant:\"outlined\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,md:3,children:[/*#__PURE__*/_jsx(Button,{onClick:onclickbutton,variant:\"contained\",children:\"Nuevo\"}),/*#__PURE__*/_jsx(DetailUser,{isOpen:openLine,handleClose:handleOpenLine,userid:userid})]}),/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%',marginTop:20},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,onSelectionModelChange:function onSelectionModelChange(newselection){setUserId(newselection.selectionModel[0]);}})})]})});};export default ListUser;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/users/ListUser.js"],"names":["React","useState","useEffect","Container","Grid","Typography","TextField","Button","DataGrid","getEmployeers","deleteEmployee","getEmployeeById","DetailUser","swal","ListUser","rows","setRows","userid","setUserId","openLine","setOpenLine","handleOpenLine","onclickbutton","columns","field","headerName","width","renderCell","params","marginLeft","goToDetaillUser","backgroundColor","deleteEmployeeServer","then","response","data","marginTop","height","newselection","selectionModel"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport { Container,Grid,Typography,TextField,Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { getEmployeers ,deleteEmployee,getEmployeeById} from \"../../services/api/LoginService\";\nimport DetailUser from \"./popup/detailUser\";\nimport swal from 'sweetalert';\n\nconst ListUser = ()=>{\n    const [ rows , setRows] = useState([]);\n    const [ userid , setUserId] = useState(0); \n    const [ openLine, setOpenLine ] = useState(false);\n\n    const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        setUserId(0);\n        handleOpenLine();\n      }\n\n    const columns = [\n      { field: 'id', headerName: 'Nº', width: 100 },\n      { field: 'name', headerName: 'Nombre', width: 200 },\n      { field: 'email', headerName: 'Correo', width: 200 },\n      { field: 'phone', headerName: 'Telèfono', width: 200 },\n      {\n        field: 'detail',\n        headerName: 'Detalle', \n        width: 160,\n        renderCell: (params) => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    style={{ marginLeft: 16 }}\n                    onClick={goToDetaillUser}\n                    \n                >\n                    Detalle\n              </Button>\n            </strong>\n        ),\n    },\n    {\n      field: 'delete',\n      headerName: 'Eliminar', \n      width: 160,\n      renderCell: (params) => (\n          <strong>\n              <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  color=\"secondary\"\n                  style={{ marginLeft: 16 ,backgroundColor:\"red\"}}\n                  onClick={deleteEmployeeServer}\n                  \n              >\n                  Eliminar\n            </Button>\n          </strong>\n      ),\n  }\n    ];\n    \n\n\n    const goToDetaillUser = ()=>{\n        setOpenLine(!openLine);\n    }\n\n    useEffect(() => {\n        getEmployeers().then(response =>{\n            setRows(response.data);\n        });\n    }, [openLine])\n\n    const deleteEmployeeServer = ()=>{\n      getEmployeeById(userid).then(response => {\n        if(response.data){\n          deleteEmployee(response.data).then(response => {\n            if(response.data){\n              swal(\"Buen trabajo!\", \"El usuario a sido eliminado con éxito\", \"success\")\n                 .then(() => { \n                  getEmployeers().then(response =>{\n                    setRows(response.data);\n                });\n\n                });\n            }\n          });\n        }\n      });\n    }\n\n    return(\n        <Container>\n            <Grid container spacing={2} style={{marginTop:30}}>\n            <Grid item md={12} justify=\"center\" alignItems=\"center\">\n              <Typography variant=\"h4\"> Usuarios del Sistema </Typography>\n            </Grid>\n            <Grid item md={3}>\n              <TextField fullWidth id=\"outlined-basic\" label=\"Nombre\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n            <TextField fullWidth id=\"outlined-basic\" label=\"Usuario\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n            <TextField fullWidth id=\"outlined-basic\" label=\"Login\" variant=\"outlined\" />\n            </Grid>\n            <Grid item md={3}>\n             <Button onClick={onclickbutton} variant=\"contained\" >Nuevo</Button>\n             <DetailUser isOpen={openLine} handleClose={handleOpenLine} userid={userid} />\n            </Grid>\n            <div style={{ height: 400, width: '100%',marginTop:20 }}>\n                    \n                    <DataGrid \n                        rows={rows}\n                        columns={columns}\n                        onSelectionModelChange={(newselection) =>{\n                          setUserId(newselection.selectionModel[0]);\n                      }}  \n                    />\n                </div>\n            </Grid>\n        </Container>\n    );\n\n}\nexport default ListUser;"]},"metadata":{},"sourceType":"module"}