{"ast":null,"code":"import HttpClient from \"../HttpClient\";\nconst token_seguridad = window.localStorage.getItem(\"token_id\");\nconst token_object = window.localStorage.getItem(\"token_employee\");\nexport const loginUser = (model, dispatch) => {\n  return new Promise((resolve, reject) => {\n    HttpClient.post('/Employee/Login', model).then(response => {\n      resolve(response);\n      dispatch({\n        type: \"SESSION_START\",\n        session: response.data,\n        authenticated: true\n      });\n      window.localStorage.setItem(\"token_id\", response.data.id);\n      window.localStorage.setItem(\"token_employee\", JSON.stringify(response.data));\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const SaveEmployeer = model => {\n  return new Promise((resolve, reject) => {\n    HttpClient.post('/Employee/Save', model).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\n_c = SaveEmployeer;\nexport const getEmployeers = () => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/Employee/GetEmployees').then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const getEmployeeActually = dispatch => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/Employee/GetEmployeeById?id=' + token_seguridad).then(response => {\n      resolve(response);\n      dispatch({\n        type: \"SESSION_START\",\n        session: response.data,\n        authenticated: true\n      });\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const getEmployeeById = id => {\n  return new Promise((resolve, reject) => {\n    HttpClient.get('/Employee/GetEmployeeById?id=' + id).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveEmployeer\");","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/services/api/LoginService.js"],"names":["HttpClient","token_seguridad","window","localStorage","getItem","token_object","loginUser","model","dispatch","Promise","resolve","reject","post","then","response","type","session","data","authenticated","setItem","id","JSON","stringify","catch","error","SaveEmployeer","getEmployeers","get","getEmployeeActually","getEmployeeById"],"mappings":"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","sourcesContent":["import HttpClient from \"../HttpClient\";\n\n\nconst token_seguridad = window.localStorage.getItem(\"token_id\");\nconst token_object = window.localStorage.getItem(\"token_employee\");\n\n\nexport const loginUser = (model,dispatch) =>{\n    \n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Login' , model).then(response => {\n            resolve(response);\n            dispatch({\n                type:\"SESSION_START\",\n                session : response.data,\n                authenticated : true\n            })\n            window.localStorage.setItem(\"token_id\",response.data.id);\n            window.localStorage.setItem(\"token_employee\",JSON.stringify(response.data));\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const SaveEmployeer = (model) =>{\n    return new Promise((resolve, reject) => {\n        HttpClient.post('/Employee/Save' , model).then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const getEmployeers =()=> {\n   return new Promise((resolve, reject) => {\n        HttpClient.get('/Employee/GetEmployees').then(response => {\n            resolve(response);\n        }).catch(error => {\n            resolve(error.response);\n        })\n    })\n}\n\nexport const getEmployeeActually =(dispatch)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Employee/GetEmployeeById?id='+ token_seguridad).then(response => {\n             resolve(response);\n             \n             dispatch({\n                type:\"SESSION_START\",\n                session : response.data,\n                authenticated : true\n            })          \n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }\n\nexport const getEmployeeById =(id)=> {\n    return new Promise((resolve, reject) => {\n         HttpClient.get('/Employee/GetEmployeeById?id='+ id).then(response => {\n             resolve(response);\n         }).catch(error => {\n             resolve(error.response);\n         })\n     })\n }"]},"metadata":{},"sourceType":"module"}