{"ast":null,"code":"import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Container,Grid,Button,Typography,TextField}from\"@material-ui/core\";import{DataGrid}from'@material-ui/data-grid';import ModalLine from\"./components/modalLine\";import{getLines}from\"../../services/api/ConfigService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ServicesConfig=function ServicesConfig(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openLine=_useState2[0],setOpenLine=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),rows=_useState4[0],setRows=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),lineId=_useState6[0],setLineId=_useState6[1];var columns=[{field:'id',headerName:'ID',width:90,identity:true},{field:'name',headerName:'Descripción',width:250},{field:'edit',headerName:'Editar',width:160,renderCell:function renderCell(params){return/*#__PURE__*/_jsx(\"strong\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"small\",color:\"secondary\",style:{marginLeft:16},onClick:onclickbutton,children:\"Editar\"})});}}];useEffect(function(){getLines().then(function(response){console.log(response);setRows(response.data);});},[openLine]);var handleOpenLine=function handleOpenLine(){setOpenLine(!openLine);};var onclickbutton=function onclickbutton(){handleOpenLine();};return/*#__PURE__*/_jsx(Container,{maxWidth:true,style:{marginTop:20},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{style:{textAlign:\"center\"},variant:'h3',children:\" Lineas\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Descripci\\xF3n\",variant:\"outlined\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",children:\"Buscar\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:2,children:[/*#__PURE__*/_jsx(Button,{onClick:onclickbutton,fullWidth:true,variant:\"contained\",children:\"Nuevo\"}),/*#__PURE__*/_jsx(ModalLine,{isOpen:openLine,handleClose:handleOpenLine,lineId:lineId})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'100%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:rows,columns:columns,pageSize:5,onSelectionModelChange:function onSelectionModelChange(newselection){setLineId(newselection.selectionModel[0]);}})})})]})});};export default ServicesConfig;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/Services.js"],"names":["React","useState","useEffect","Container","Grid","Button","Typography","TextField","DataGrid","ModalLine","getLines","ServicesConfig","openLine","setOpenLine","rows","setRows","lineId","setLineId","columns","field","headerName","width","identity","renderCell","params","marginLeft","onclickbutton","then","response","console","log","data","handleOpenLine","marginTop","textAlign","height","newselection","selectionModel"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA2BC,MAA3B,CAAmCC,UAAnC,CAAgDC,SAAhD,KAAgE,mBAAhE,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,QAAT,KAAyB,kCAAzB,C,wFACA,GAAMC,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAI,CAEtB,cAAkCV,QAAQ,CAAC,KAAD,CAA1C,wCAAQW,QAAR,eAAkBC,WAAlB,eACA,eAAyBZ,QAAQ,CAAC,EAAD,CAAjC,yCAAQa,IAAR,eAAcC,OAAd,eACA,eAA6Bd,QAAQ,CAAC,CAAD,CAArC,yCAAQe,MAAR,eAAgBC,SAAhB,eACA,GAAMC,CAAAA,OAAO,CAAG,CACZ,CAAEC,KAAK,CAAE,IAAT,CAAeC,UAAU,CAAE,IAA3B,CAAiCC,KAAK,CAAE,EAAxC,CAA2CC,QAAQ,CAAE,IAArD,CADY,CAEZ,CAAEH,KAAK,CAAE,MAAT,CAAiBC,UAAU,CAAE,aAA7B,CAA4CC,KAAK,CAAE,GAAnD,CAFY,CAGZ,CAAEF,KAAK,CAAE,MAAT,CAAiBC,UAAU,CAAE,QAA7B,CAAuCC,KAAK,CAAE,GAA9C,CACIE,UAAU,CAAE,oBAACC,MAAD,qBACR,qCACI,KAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAC,WAHV,CAII,KAAK,CAAE,CAAEC,UAAU,CAAE,EAAd,CAJX,CAKI,OAAO,CAAEC,aALb,oBADJ,EADQ,EADhB,CAHY,CAAhB,CAqBExB,SAAS,CAAC,UAAM,CACdQ,QAAQ,GAAGiB,IAAX,CAAgB,SAAAC,QAAQ,CAAG,CACvBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAb,OAAO,CAACa,QAAQ,CAACG,IAAV,CAAP,CACH,CAHD,EAID,CALQ,CAKN,CAACnB,QAAD,CALM,CAAT,CASA,GAAMoB,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,EAAI,CACxBnB,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAFD,CAIA,GAAMc,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,EAAI,CACvBM,cAAc,GACf,CAFD,CAIF,mBACI,KAAC,SAAD,EAAW,QAAQ,KAAnB,CAAoB,KAAK,CAAE,CAAEC,SAAS,CAAC,EAAZ,CAA3B,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACI,KAAC,UAAD,EAAY,KAAK,CAAE,CAACC,SAAS,CAAE,QAAZ,CAAnB,CAA0C,OAAO,CAAE,IAAnD,qBADJ,EADJ,cAII,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACC,KAAC,SAAD,EAAW,SAAS,KAApB,CAAqB,KAAK,CAAC,gBAA3B,CAAyC,OAAO,CAAC,UAAjD,EADD,EAJJ,cAOI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,KAAC,MAAD,EAAS,SAAS,KAAlB,CAAmB,OAAO,CAAC,WAA3B,oBADJ,EAPJ,cAUI,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,wBACI,KAAC,MAAD,EAAQ,OAAO,CAAER,aAAjB,CAAgC,SAAS,KAAzC,CAA0C,OAAO,CAAC,WAAlD,mBADJ,cAEI,KAAC,SAAD,EAAW,MAAM,CAAEd,QAAnB,CAA6B,WAAW,CAAEoB,cAA1C,CAA0D,MAAM,CAAIhB,MAApE,EAFJ,GAVJ,cAcI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACA,YAAK,KAAK,CAAE,CAAEmB,MAAM,CAAE,GAAV,CAAed,KAAK,CAAE,MAAtB,CAAZ,uBACI,KAAC,QAAD,EACI,IAAI,CAAEP,IADV,CAEI,OAAO,CAAEI,OAFb,CAGI,QAAQ,CAAE,CAHd,CAII,sBAAsB,CAAE,gCAACkB,YAAD,CAAiB,CACrCnB,SAAS,CAACmB,YAAY,CAACC,cAAb,CAA4B,CAA5B,CAAD,CAAT,CACH,CANL,EADJ,EADA,EAdJ,GADJ,EADJ,CA+BH,CA1ED,CA4EA,cAAe1B,CAAAA,cAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { Container, Grid , Button, Typography  ,TextField} from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport ModalLine from \"./components/modalLine\";\nimport { getLines } from \"../../services/api/ConfigService\";\nconst ServicesConfig =()=>{\n\n    const [ openLine, setOpenLine ] = useState(false);\n    const [ rows ,setRows] = useState([]);\n    const [ lineId ,setLineId] = useState(0);\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90,identity: true },\n        { field: 'name', headerName: 'Descripción', width: 250},\n        { field: 'edit', headerName: 'Editar', width: 160,\n            renderCell: (params) => (\n                <strong>\n                    <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        style={{ marginLeft: 16 }}\n                        onClick={onclickbutton}\n                        \n                    >\n                        Editar\n                  </Button>\n                </strong>\n            ),\n        },\n      ];\n\n      useEffect(() => {\n        getLines().then(response =>{\n            console.log(response);\n            setRows(response.data);\n        })         \n      }, [openLine])\n      \n\n\n      const handleOpenLine =()=>{\n        setOpenLine(!openLine);\n      }\n\n      const onclickbutton =()=>{\n        handleOpenLine();\n      }\n\n    return(\n        <Container maxWidth style={{ marginTop:20}}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography style={{textAlign :\"center\"}} variant={'h3'}> Lineas</Typography>\n                </Grid>\n                <Grid item xs={8}>\n                 <TextField fullWidth label=\"Descripción\" variant=\"outlined\" />\n                </Grid>\n                <Grid item xs={2}>\n                    <Button  fullWidth variant=\"contained\">Buscar</Button>\n                </Grid>\n                <Grid item xs={2}>\n                    <Button onClick={onclickbutton} fullWidth variant=\"contained\">Nuevo</Button>\n                    <ModalLine isOpen={openLine} handleClose={handleOpenLine} lineId = {lineId}/>\n                </Grid>\n                <Grid item xs={12}>\n                <div style={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={5}\n                        onSelectionModelChange={(newselection) =>{\n                            setLineId(newselection.selectionModel[0]);\n                        }}  \n                    />\n                    </div>\n                  </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default ServicesConfig;"]},"metadata":{},"sourceType":"module"}