{"ast":null,"code":"import _defineProperty from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Dialog,DialogTitle,DialogContent,TextField,DialogActions,Button}from\"@material-ui/core\";import{saveLine,getLineById}from\"../../../services/api/ConfigService\";import swal from'sweetalert';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ModalLine=function ModalLine(props){var isOpen=props.isOpen,handleClose=props.handleClose,lineId=props.lineId;var _useState=useState({Id:0,Name:''}),_useState2=_slicedToArray(_useState,2),line=_useState2[0],setLine=_useState2[1];useEffect(function(){if(lineId>0){getLineById(lineId).then(function(response){setLine({Id:response.data.id,Name:response.data.name});});}},[lineId]);var saveLocalLine=function saveLocalLine(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setLine(function(last){return _objectSpread(_objectSpread({},last),{},_defineProperty({},name,value));});};var sendLocalLine=function sendLocalLine(){saveLine(line).then(function(response){swal(\"Buen trabajo!\",\"La linea a sido guardado con éxito\",\"success\").then(function(){handleClose();});});};return/*#__PURE__*/_jsxs(Dialog,{open:isOpen,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\",children:[/*#__PURE__*/_jsxs(DialogTitle,{id:\"form-dialog-title\",children:[\" \",lineId>0?' Editar ':'Nueva Linea',\" \"]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TextField,{autoFocus:true,fullWidth:true,margin:\"dense\",name:\"Name\",type:\"text\",label:\"Descripci\\xF3n\",variant:\"outlined\",value:line.Name,onChange:saveLocalLine})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,color:\"primary\",children:\"Cerrar\"}),/*#__PURE__*/_jsx(Button,{onClick:sendLocalLine,color:\"primary\",children:\" Guardar  \"})]})]});};export default ModalLine;","map":{"version":3,"sources":["/Users/danielcr/Documents/GitHub/Biossay/GstFront/biossay-webapp/src/components/configuration/components/modalLine.js"],"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","TextField","DialogActions","Button","saveLine","getLineById","swal","ModalLine","props","isOpen","handleClose","lineId","Id","Name","line","setLine","then","response","data","id","name","saveLocalLine","e","target","value","last","sendLocalLine"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAAQC,MAAR,CAAeC,WAAf,CAA2BC,aAA3B,CAAyCC,SAAzC,CAAmDC,aAAnD,CAAiEC,MAAjE,KAA8E,mBAA9E,CACA,OAASC,QAAT,CAAkBC,WAAlB,KAAqC,qCAArC,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,C,wFAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAS,CAC3B,GAAQC,CAAAA,MAAR,CAAwCD,KAAxC,CAAQC,MAAR,CAAgBC,WAAhB,CAAwCF,KAAxC,CAAgBE,WAAhB,CAA6BC,MAA7B,CAAwCH,KAAxC,CAA6BG,MAA7B,CACA,cAAyBf,QAAQ,CAAC,CAChCgB,EAAE,CAAG,CAD2B,CAEhCC,IAAI,CAAG,EAFyB,CAAD,CAAjC,wCAAQC,IAAR,eAAcC,OAAd,eAKAlB,SAAS,CAAC,UAAM,CACd,GAAIc,MAAM,CAAG,CAAb,CAAgB,CAChBN,WAAW,CAACM,MAAD,CAAX,CAAoBK,IAApB,CAAyB,SAAAC,QAAQ,CAAG,CAClCF,OAAO,CAAC,CACNH,EAAE,CAAGK,QAAQ,CAACC,IAAT,CAAcC,EADb,CAENN,IAAI,CAAEI,QAAQ,CAACC,IAAT,CAAcE,IAFd,CAAD,CAAP,CAKD,CAND,EAOC,CACF,CAVQ,CAUN,CAACT,MAAD,CAVM,CAAT,CAYA,GAAMU,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,CAACC,CAAD,CAAK,CACxB,cAAuBA,CAAC,CAACC,MAAzB,CAAQH,IAAR,WAAQA,IAAR,CAAcI,KAAd,WAAcA,KAAd,CACAT,OAAO,CAAC,SAACU,IAAD,wCACHA,IADG,wBAELL,IAFK,CAEGI,KAFH,IAAD,CAAP,CAID,CAND,CAQA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAI,CACxBtB,QAAQ,CAACU,IAAD,CAAR,CAAeE,IAAf,CAAoB,SAAAC,QAAQ,CAAG,CAC7BX,IAAI,CAAC,eAAD,CAAkB,oCAAlB,CAAwD,SAAxD,CAAJ,CACCU,IADD,CACM,UAAM,CACVN,WAAW,GACZ,CAHD,EAID,CALD,EAMD,CAPD,CAUI,mBACI,MAAC,MAAD,EAAQ,IAAI,CAAED,MAAd,CAAsB,OAAO,CAAEC,WAA/B,CAA4C,kBAAgB,mBAA5D,wBACK,MAAC,WAAD,EAAa,EAAE,CAAC,mBAAhB,eAAwCC,MAAM,CAAG,CAAT,CAAa,UAAb,CAAyB,aAAjE,OADL,cAEA,KAAC,aAAD,wBACE,KAAC,SAAD,EACE,SAAS,KADX,CAEE,SAAS,KAFX,CAGE,MAAM,CAAC,OAHT,CAIE,IAAI,CAAC,MAJP,CAKE,IAAI,CAAC,MALP,CAKa,KAAK,CAAC,gBALnB,CAKiC,OAAO,CAAC,UALzC,CAME,KAAK,CAAEG,IAAI,CAACD,IANd,CAOE,QAAQ,CAAEQ,aAPZ,EADF,EAFA,cAaA,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAEX,WAAjB,CAA8B,KAAK,CAAC,SAApC,oBADF,cAEE,KAAC,MAAD,EAAQ,OAAO,CAAEgB,aAAjB,CAAgC,KAAK,CAAC,SAAtC,wBAFF,GAbA,GADJ,CAoBH,CAzDD,CA0DA,cAAenB,CAAAA,SAAf","sourcesContent":["import React, { useState ,useEffect } from \"react\";\nimport {Dialog,DialogTitle,DialogContent,TextField,DialogActions,Button} from \"@material-ui/core\";\nimport { saveLine,getLineById } from \"../../../services/api/ConfigService\";\nimport swal from 'sweetalert';\n\n\nconst ModalLine = (props)=>{\nconst { isOpen, handleClose ,lineId } = props;\nconst [ line, setLine] = useState({ \n  Id : 0,\n  Name : ''\n});\n\nuseEffect(() => {\n  if (lineId > 0) {\n  getLineById(lineId).then(response =>{\n    setLine({\n      Id : response.data.id,\n      Name: response.data.name\n    });\n    \n  });\n  }\n}, [lineId])\n\nconst saveLocalLine =(e)=>{\n  const { name, value} = e.target;\n  setLine((last)=>({\n    ...last,\n    [name] : value\n  }));\n}\n\nconst sendLocalLine = ()=>{\n  saveLine(line).then(response =>{\n    swal(\"Buen trabajo!\", \"La linea a sido guardado con éxito\", \"success\")\n    .then(() => { \n      handleClose();\n    }); \n  })\n}\n\n\n    return(\n        <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n             <DialogTitle id=\"form-dialog-title\"> { (lineId > 0 ? ' Editar ': 'Nueva Linea')} </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            fullWidth\n            margin=\"dense\" \n            name=\"Name\"\n            type=\"text\"label=\"Descripción\" variant=\"outlined\"\n            value={line.Name} \n            onChange={saveLocalLine}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">Cerrar</Button>\n          <Button onClick={sendLocalLine} color=\"primary\"> Guardar  </Button>\n        </DialogActions>\n        </Dialog>\n    )\n}\nexport default ModalLine;"]},"metadata":{},"sourceType":"module"}